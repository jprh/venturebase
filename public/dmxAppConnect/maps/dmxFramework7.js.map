{"version":3,"sources":["core/f7.js","core/f7Mappings.js","actions/f7actions.js","actions/f7toast.js","actions/f7dialog.js","actions/f7progress.js","actions/f7preloader.js","components/f7App.js","components/f7View.js","components/f7Page.js","components/f7Popup.js","components/f7LoginScreen.js","components/f7ActionSheet.js","components/f7Gauge.js","components/f7Messages.js","components/f7Notification.js","components/f7PhotoBrowser.js","components/f7Progressbar.js","components/f7Toggle.js","components/f7Range.js","components/f7RangeDual.js","components/f7Ptr.js","components/f7SheetModal.js","components/f7Accordion.js","components/f7Autocomplete.js","components/f7Calendar.js","components/f7Picker.js"],"names":["Framework7","alert","dmx","f7","events","Events","init","node","params","app","root","routes","Array","isArray","window","initialized","emit","once","ready","handler","instance","config","mapping","Actions","options","Promise","resolve","buttons","forEach","button","onClick","text","actions","create","convertToPopover","requestAnimationFrame","destroy","open","toast","destroyOnClose","icon","this","parse","position","horizontalPosition","closeButton","closeButtonColor","closeButtonText","closeTimeout","undefined","title","dialog","confirm","then","_exec","else","defaultValue","prompt","value","login","username","password","color","preloader","close","progressbar","show","set","progress","duration","hide","Component","initialData","id","name","version","language","theme","darkTheme","device","online","attributes","type","String","default","enum","Boolean","Object","methods","msg","component","showPreloader","hidePreloader","showProgress","setProgress","hideProgress","Event","resize","orientationchange","offline","render","props","urlParams","URLSearchParams","document","location","search","has","get","autoDarkTheme","toBoolean","view","stackPages","registerEvents","on","isOnline","isDarkTheme","clone","$parse","event","dispatchEvent","animate","navigate","url","router","back","refresh","refreshPage","clearHistory","clearPreviousHistory","views","keys","pageData","el","dmxComponent","route","page","children","push","data","index","findIndex","child","$node","del","splice","opened","backdrop","closed","classList","add","popup","closeByBackdropClick","closeOnEscape","swipeToClose","update","beforeDestroy","loginScreen","f7LoginScreen","grid","action","closeByOutsideClick","Number","size","gauge","getProps","equal","bgColor","borderBgColor","borderColor","borderWidth","valueText","valueTextColor","valueFontSize","valueFontWeight","labelText","labelTextColor","labelFontSize","labelFontWeight","messages","showTyping","message","hideTyping","addMessage","method","addMessages","removeMessage","removeMessages","scroll","renderMessages","layout","clear","entries","reduce","o","entry","replace","m","c","toUpperCase","self","assign","subtitle","click","notification","titleRightText","closeOnClick","cssClass","activeIndex","exposed","photos","exposition","navbar","toolbar","expositionToggle","expositionEnable","expositionDisable","tap","doubleTap","doubleClick","slideChange","lazyImageLoad","lazyImageReady","createComponent","photoBrowser","expositionHideCaptions","popupPush","routableModals","captionsTheme","pageBackLinkText","popupCloseLinkText","navbarShowCount","navbarOfText","iconsColor","hidden","bind","remove","checked","toggle","change","min","max","step","label","vertical","scale","setValue","changed","range","draggableBar","verticalReversed","scaleSteps","scaleSubSteps","extends","start","end","setValues","dual","refreshing","done","ptr","pullstart","pullmove","pullend","bottom","contains","insertAdjacentHTML","querySelector","stepOpen","stepClose","stepToggle","setSwipeSet","stepProgress","sheet","swipeToStep","accordion","addEventListener","ui","template","extendOf","replaces","priority","limit","scopeField","typeahead","preloaderShow","preloaderHide","autocomplete","openIn","inputEl","preloaderColor","valueProperty","textProperty","inputEvents","highlightMatches","dropdownPlaceholderText","updateInputValueOnSelect","expandInput","source","query","length","filter","item","DataScope","toLowerCase","includes","locale","multiple","direction","validate","Date","header","addValue","nextMonth","prevMonth","nextYear","prevYear","setYearMonth","year","month","dayclick","calendar","firstDay","weekendDays","rangePicker","rangePickerMinDays","rangePickerMaxDays","minDate","toDate","maxDate","touchMove","closeOnSelect","weekHeader","monthSelector","monthPicker","yearSelector","yearPicker","yearPickerMin","yearPickerMax","timePicker","timePickerPlaceholder","sheetPush","scrollToInput","inputReadOnly","toolbarCloseText","headerPlaceholder","date","toString","mousewheel","cols","multiValue","isDynamic","variables","values","objectKey","enclose","dataBindings","picker","getParams","rotateEffect","momentumRatio","updateValuesOnMomentum","updateValuesOnTouchmove","updateValuesOnMousewheel","freeMode","getCols","sheetSwipeToClose","map","col","i","slice","displayProperty","displayValues","console","warn"],"mappings":"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","file":"../dmxFramework7/dmxFramework7.js","sourcesContent":["if (!Framework7) {\r\n  alert('Framework7 missing!');\r\n}\r\n\r\ndmx.f7 = {\r\n  events: new Framework7.Events(),\r\n  init: function(node, params) {\r\n    const app = new Framework7({\r\n      ...params,\r\n      root: node,\r\n      routes: Array.isArray(params.routes) ? params.routes : Array.isArray(window.routes) ? window.routes : [],\r\n    });\r\n\r\n    if (app.initialized) {\r\n      dmx.f7.events.emit('ready', app);\r\n    } else {\r\n      app.once('ready', () => {\r\n        dmx.f7.events.emit('ready', app);\r\n      });\r\n    }\r\n\r\n    return app;\r\n  },\r\n  ready: function(handler) {\r\n    if (!handler) return;\r\n    if (Framework7.instance) {\r\n      handler(Framework7.instance);\r\n    } else {\r\n      dmx.f7.events.once('ready', handler);\r\n    }\r\n  },\r\n};","dmx.config.mapping['.view'] = 'f7-view';\r\ndmx.config.mapping['.page'] = 'f7-page';\r\ndmx.config.mapping['.popup'] = 'f7-popup';\r\ndmx.config.mapping['.login-screen'] = 'f7-login-screen';\r\ndmx.config.mapping['.actions-modal'] = 'f7-action-sheet';\r\ndmx.config.mapping['.progressbar'] = 'f7-progressbar';\r\ndmx.config.mapping['.toggle:not(.toggle-init)'] = 'f7-toggle';\r\ndmx.config.mapping['.ptr-content'] = 'f7-ptr';\r\ndmx.config.mapping['.accordion-item'] = 'f7-accordion';\r\ndmx.config.mapping['.sheet-modal'] = 'f7-sheet-modal';","dmx.Actions({\r\n  // https://framework7.io/docs/action-sheet#action-sheet-parameters\r\n  'f7.actions.open': function(options) {\r\n    return new Promise(resolve => {\r\n      if (Array.isArray(options.buttons)) {\r\n        options.buttons.forEach(button => {\r\n          button.onClick = () => resolve(button.text);\r\n        });\r\n      }\r\n      const actions = Framework7.instance.actions.create({\r\n        convertToPopover: false,\r\n        ...options,\r\n      });\r\n\r\n      actions.once('closed', () => {\r\n        resolve(null);\r\n        requestAnimationFrame(() => {\r\n          actions.destroy();\r\n        });\r\n      });\r\n\r\n      actions.open();\r\n    });\r\n  }\r\n});","dmx.Actions({\r\n  'f7.toast.show': function(options) {\r\n    Framework7.instance.toast.create({\r\n      destroyOnClose: true,\r\n      icon: this.parse(options.icon),\r\n      text: this.parse(options.text),\r\n      position: this.parse(options.position) || 'bottom',\r\n      horizontalPosition: this.parse(options.horizontalPosition) || 'left',\r\n      closeButton: !!this.parse(options.closeButton),\r\n      closeButtonColor: this.parse(options.closeButtonColor),\r\n      closeButtonText: this.parse(options.closeButtonText) || 'Ok',\r\n      closeTimeout: this.parse(options.closeTimeout) || undefined\r\n    }).open();\r\n  }\r\n});","dmx.Actions({\r\n  'f7.dialog.alert': function(options) {\r\n    const text = this.parse(options.text);\r\n    const title = this.parse(options.title);\r\n\r\n    return new Promise(resolve => {\r\n      Framework7.instance.dialog.alert(text, title, resolve);\r\n    });\r\n  },\r\n\r\n  'f7.dialog.confirm': function(options) {\r\n    const text = this.parse(options.text);\r\n    const title = this.parse(options.title);\r\n\r\n    return new Promise(resolve => {\r\n      Framework7.instance.dialog.confirm(\r\n        text,\r\n        title,\r\n        () => {\r\n          if (options.then) {\r\n            this._exec(options.then).then(() => resolve(true));\r\n          } else {\r\n            resolve(true);\r\n          }\r\n        },\r\n        () => {\r\n          if (options.else) {\r\n            this._exec(options.else).then(() => resolve(false));\r\n          } else {\r\n            resolve(false);\r\n          }\r\n        }\r\n      );\r\n    });\r\n  },\r\n\r\n  'f7.dialog.prompt': function(options) {\r\n    const text = this.parse(options.text);\r\n    const title = this.parse(options.title);\r\n    const defaultValue = this.parse(options.defaultValue);\r\n\r\n    return new Promise(resolve => {\r\n      Framework7.instance.dialog.prompt(\r\n        text,\r\n        title,\r\n        (value) => resolve(value),\r\n        () => resolve(null),\r\n        defaultValue\r\n      );\r\n    });\r\n  },\r\n\r\n  'f7.dialog.login': function (options) {\r\n    const text = this.parse(options.text);\r\n    const title = this.parse(options.title);\r\n\r\n    return new Promise(resolve => {\r\n      Framework7.instance.dialog.login(\r\n        text,\r\n        title,\r\n        (username, password) => resolve({ username, password }),\r\n        () => resolve(null)\r\n      );\r\n    });\r\n  },\r\n\r\n  'f7.dialog.password': function (options) {\r\n    const text = this.parse(options.text);\r\n    const title = this.parse(options.title);\r\n\r\n    return new Promise(resolve => {\r\n      Framework7.instance.dialog.password(\r\n        text,\r\n        title,\r\n        (password) => resolve(password),\r\n        () => resolve(null)\r\n      );\r\n    });\r\n  },\r\n\r\n  'f7.dialog.preloader': function (options) {\r\n    const title = this.parse(options.title);\r\n    const color = this.parse(options.color);\r\n\r\n    Framework7.instance.dialog.preloader(title, color);\r\n  },\r\n\r\n  'f7.dialog.close': function (options) {\r\n    Framework7.instance.dialog.close();\r\n  },\r\n});\r\n","dmx.Actions({\r\n  'f7.progressbar.show': function(options) {\r\n    Framework7.instance.progressbar.show(this.parse(options.color));\r\n  },\r\n  \r\n  'f7.progressbar.set': function(options) {\r\n    Framework7.instance.progressbar.set(this.parse(options.progress), this.parse(options.duration));\r\n  },\r\n  \r\n  'f7.progressbar.hide': function(options) {\r\n    Framework7.instance.progressbar.hide();\r\n  },\r\n});","dmx.Actions({\r\n  'f7.preloader.show': function(options) {\r\n    Framework7.instance.preloader.show();\r\n  },\r\n  \r\n  'f7.preloader.hide': function(options) {\r\n    Framework7.instance.preloader.hide();\r\n  },\r\n});","dmx.Component('f7-app', {\r\n  initialData: {\r\n    id: 'io.framework7.testapp',\r\n    name: 'Framework7',\r\n    version: '1.0.0',\r\n    language: '',\r\n    theme: 'auto',\r\n    darkTheme: false,\r\n    initialized: false,\r\n    device: null,\r\n    online: false,\r\n  },\r\n\r\n  attributes: {\r\n    'name': {\r\n      type: String,\r\n      default: 'Framework7',\r\n    },\r\n\r\n    'version': {\r\n      type: String,\r\n      default: '1.0.0',\r\n    },\r\n\r\n    'theme': {\r\n      type: String,\r\n      default: 'auto',\r\n      enum: ['auto', 'ios', 'md', 'aurora'],\r\n    },\r\n\r\n    'language': {\r\n      type: String,\r\n      default: undefined, // default equal to the current browser/webview language\r\n    },\r\n\r\n    'auto-dark-theme': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'params': {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    alert: function(msg) {\r\n      if (!this.component) return;\r\n      this.component.dialog.alert(msg);\r\n    },\r\n\r\n    showPreloader: function(color) {\r\n      if (!this.component) return;\r\n      this.component.preloader.show(color);\r\n    },\r\n\r\n    hidePreloader: function() {\r\n      if (!this.component) return;\r\n      this.component.preloader.hide();\r\n    },\r\n\r\n    showProgress: function(color) {\r\n      if (!this.component) return;\r\n      this.component.progressbar.show(color);\r\n    },\r\n\r\n    setProgress: function(progress, duration) {\r\n      if (!this.component) return;\r\n      this.component.progressbar.set(progress, duration);\r\n    },\r\n\r\n    hideProgress: function(color) {\r\n      if (!this.component) return;\r\n      this.component.progressbar.hide();\r\n    }\r\n  },\r\n\r\n  events: {\r\n    init: Event,\r\n    resize: Event,\r\n    orientationchange: Event,\r\n    online: Event,\r\n    offline: Event,\r\n  },\r\n\r\n  render: function (node) {\r\n    let theme = this.props.theme;\r\n    let urlParams = new URLSearchParams(document.location.search);\r\n\r\n    if (theme == 'auto' && urlParams.has('theme')) {\r\n      theme = urlParams.get('theme');\r\n    }\r\n\r\n    const app = this.component = dmx.f7.init(node, {\r\n      ...this.props.params,\r\n      id: `io.framework7.${this.name}`,\r\n      name: this.props.name,\r\n      version: this.props.version,\r\n      theme: theme,\r\n      autoDarkTheme: this.toBoolean('auto-dark-theme'),\r\n      view: { stackPages: true },\r\n    });\r\n\r\n    this.registerEvents(['init', 'resize', 'orientationchange', 'online', 'offline']);\r\n\r\n    app.on('connection', (isOnline) => {\r\n      this.set('online', isOnline);\r\n    });\r\n\r\n    app.on('darkThemeChange', (isDarkTheme) => {\r\n      this.set('darkTheme', isDarkTheme);\r\n    });\r\n\r\n    this.set({\r\n      id: app.id,\r\n      name: app.name,\r\n      version: app.version,\r\n      language: app.language,\r\n      theme: app.theme,\r\n      darkTheme: app.darkTheme,\r\n      initialized: true,\r\n      device: dmx.clone(app.device),\r\n      online: app.online,\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  registerEvents: function(events) {\r\n    for (const event of events) {\r\n      this.component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n\r\n  toBoolean: function(name, props) {\r\n    const value = props ? props[name] : this.props[name];\r\n    \r\n    if (typeof value == 'string') {\r\n      return value != 'false';\r\n    }\r\n    \r\n    return !!value;\r\n  },\r\n});","dmx.Component('f7-view', {\r\n  initialData: {},\r\n\r\n  attributes: {\r\n    'animate': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'params': {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    navigate: function(url, options) {\r\n      if (!this.component) return;\r\n      this.component.router.navigate(url, options);\r\n    },\r\n\r\n    back: function(url, options) {\r\n      if (!this.component) return;\r\n      this.component.router.back(url, options);\r\n    },\r\n\r\n    refresh: function() {\r\n      if (!this.component) return;\r\n      this.component.router.refreshPage();\r\n    },\r\n\r\n    clearHistory: function() {\r\n      if (!this.component) return;\r\n      this.component.router.clearPreviousHistory();\r\n    }\r\n  },\r\n\r\n  events: {\r\n    init: Event,\r\n    resize: Event,\r\n  },\r\n\r\n  render: function(node) {\r\n    dmx.f7.ready(app => {\r\n      const view = this.component = app.views.create(node, {\r\n        ...this.props.params,\r\n        animate: this.toBoolean('animate'),\r\n      });\r\n\r\n      this.registerEvents(Object.keys(this.events));\r\n\r\n      view.on('pageInit', pageData => {\r\n        if (!pageData.el.dmxComponent) {\r\n          const Page = dmx.Component('f7-page');\r\n          const page = new Page(pageData.el, this);\r\n          page.set('route', pageData.route);\r\n\r\n          this.children.push(page);\r\n          this.set(page.name, page.data);\r\n\r\n          pageData.dmxComponent = pageData.el.dmxComponent;\r\n        } else {\r\n          pageData.el.dmxComponent.set('route', pageData.route);\r\n          pageData.dmxComponent = pageData.el.dmxComponent;\r\n        }\r\n      });\r\n\r\n      view.on('pageReinit', pageData => {\r\n        if (pageData.dmxComponent) {\r\n          pageData.dmxComponent.set('route', pageData.route);\r\n        }\r\n      });\r\n\r\n      view.on('pageBeforeRemove', pageData => {\r\n        const index = this.children.findIndex(child => child.$node == pageData.el);\r\n\r\n        if (index != -1) {\r\n          this.del(this.children[index].name);\r\n          this.children.splice(index, 1);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  destroy: function() {\r\n    if (this.component) {\r\n      this.component.destroy();\r\n      delete this.component;\r\n    }\r\n  },\r\n\r\n  registerEvents: function(events) {\r\n    for (const event of events) {\r\n      this.component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n\r\n  toBoolean: function(name, props) {\r\n    const value = props ? props[name] : this.props[name];\r\n    \r\n    if (typeof value == 'string') {\r\n      return value != 'false';\r\n    }\r\n    \r\n    return !!value;\r\n  },\r\n});","dmx.Component('f7-page', {\r\n  initialData: {\r\n    route: null,\r\n  },\r\n\r\n  render: function(node) {\r\n    this.$parse();\r\n  },\r\n});","dmx.Component('f7-popup', {\r\n  initialData: {\r\n    opened: false\r\n  },\r\n\r\n  attributes: {\r\n    'backdrop': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'close-by-backdrop-click': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'close-on-escape': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'animate': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'swipe-to-close': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'opened': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'params': {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open: function(animate) {\r\n      if (!this.component) return;\r\n      this.component.open(animate);\r\n    },\r\n\r\n    close: function(animate) {\r\n      if (!this.component) return;\r\n      this.component.close(animate);\r\n    }\r\n  },\r\n\r\n  events: {\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event\r\n  },\r\n\r\n  render: function(node) {\r\n    node.classList.add('popup');\r\n\r\n    dmx.f7.ready(app => {\r\n      const popup = this.component = app.popup.create({\r\n        ...this.props.params,\r\n        el: node,\r\n        backdrop: this.toBoolean('backdrop'),\r\n        closeByBackdropClick: this.toBoolean('close-by-backdrop-click'),\r\n        closeOnEscape: this.toBoolean('close-on-escape'),\r\n        animate: this.toBoolean('animate'),\r\n        swipeToClose: this.toBoolean('swipe-to-close'),\r\n      });\r\n\r\n      this.registerEvents(Object.keys(this.events));\r\n\r\n      popup.on('opened', () => {\r\n        this.set('opened', true);\r\n      });\r\n\r\n      popup.on('closed', () => {\r\n        this.set('opened', false);\r\n      });\r\n\r\n      if (this.toBoolean('opened')) {\r\n        popup.open(false);\r\n      }\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  update: function(props) {\r\n    if (this.component) {\r\n      if (this.toBoolean('opened', props) != this.toBoolean('opened')) {\r\n        if (this.toBoolean('opened')) {\r\n          this.component.open();\r\n        } else {\r\n          this.component.close();\r\n        }\r\n      }\r\n\r\n      this.set('opened', this.component.opened);\r\n    }\r\n  },\r\n\r\n  beforeDestroy: function() {\r\n    if (this.component) {\r\n      this.component.destroy();\r\n      delete this.component;\r\n    }\r\n  },\r\n\r\n  registerEvents: function(events) {\r\n    for (const event of events) {\r\n      this.component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n\r\n  toBoolean: function(name, props) {\r\n    const value = props ? props[name] : this.props[name];\r\n    \r\n    if (typeof value == 'string') {\r\n      return value != 'false';\r\n    }\r\n    \r\n    return !!value;\r\n  },\r\n});","dmx.Component('f7-login-screen', {\r\n  initialData: {\r\n    opened: false,\r\n  },\r\n\r\n  attributes: {\r\n    'animate': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'opened': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'params': {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open: function(animate) {\r\n      if (!this.component) return;\r\n      this.component.open(animate);\r\n    },\r\n\r\n    close: function(animate) {\r\n      if (!this.component) return;\r\n      this.component.close(animate);\r\n    },\r\n  },\r\n\r\n  events: {\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event\r\n  },\r\n\r\n  render: function(node) {\r\n    node.classList.add('login-screen');\r\n\r\n    dmx.f7.ready(app => {\r\n      const loginScreen = this.component = app.loginScreen.create({\r\n        ...this.props.params,\r\n        el: node,\r\n        animate: this.toBoolean('animate'),\r\n      });\r\n\r\n      this.registerEvents(['open', 'opened', 'close', 'closed']);\r\n\r\n      loginScreen.on('opened', () => {\r\n        this.set('opened', true);\r\n      });\r\n\r\n      loginScreen.on('closed', () => {\r\n        this.set('opened', false);\r\n      });\r\n\r\n      if (this.toBoolean('opened')) {\r\n        loginScreen.open(false);\r\n      }\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  update: function(props) {\r\n    if (this.component) {\r\n      if (this.toBoolean('opened', props) != this.toBoolean('opened')) {\r\n        if (this.toBoolean('opened')) {\r\n          this.component.open();\r\n        } else {\r\n          this.component.close();\r\n        }\r\n      }\r\n\r\n      this.set('opened', this.component.opened);\r\n    }\r\n  },\r\n\r\n  beforeDestroy: function() {\r\n    if (this.f7LoginScreen) {\r\n      this.component.destroy();\r\n      delete this.component;\r\n    }\r\n  },\r\n\r\n  registerEvents: function(events) {\r\n    for (const event of events) {\r\n      this.component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n\r\n  toBoolean: function(name, props) {\r\n    const value = props ? props[name] : this.props[name];\r\n    \r\n    if (typeof value == 'string') {\r\n      return value != 'false';\r\n    }\r\n    \r\n    return !!value;\r\n  },\r\n});","dmx.Component('f7-action-sheet', {\r\n  initialData: {\r\n    opened: false,\r\n  },\r\n\r\n  attributes: {\r\n    'backdrop': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'close-by-backdrop-click': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'close-by-outside-click': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'close-on-escape': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'animate': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'grid': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'convert-to-popover': {\r\n      type: [Boolean, String],\r\n      default: true\r\n    },\r\n\r\n    'force-to-popover': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'opened': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'params': {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open: function(animate) {\r\n      if (!this.component) return;\r\n      this.component.open(animate);\r\n    },\r\n\r\n    close: function(animate) {\r\n      if (!this.component) return;\r\n      this.component.close(animate);\r\n    }\r\n  },\r\n\r\n  events: {\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event\r\n  },\r\n\r\n  render: function(node) {\r\n    node.classList.add('actions-modal');\r\n\r\n    dmx.f7.ready(app => {\r\n      const action = this.component = app.actions.create({\r\n        ...this.props.params,\r\n        el: node,\r\n        backdrop: this.toBoolean('backdrop'),\r\n        closeByBackdropClick: this.toBoolean('close-by-backdrop-click'),\r\n        closeByOutsideClick: this.toBoolean('close-by-outside-click'),\r\n        closeOnEscape: this.toBoolean('close-on-escape'),\r\n        animate: this.toBoolean('animate'),\r\n        grid: this.toBoolean('grid'),\r\n        convertToPopover: this.toBoolean('convert-to-popover'),\r\n      });\r\n      \r\n      this.registerEvents(['open', 'opened', 'close', 'closed']);\r\n\r\n      action.on('opened', () => {\r\n        this.set('opened', true);\r\n      });\r\n\r\n      action.on('closed', () => {\r\n        this.set('opened', false);\r\n      });\r\n\r\n      if (this.toBoolean('opened')) {\r\n        action.open(false);\r\n      }\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  update: function(props) {\r\n    if (this.component) {\r\n      if (this.toBoolean('opened', props) != this.toBoolean('opened')) {\r\n        if (this.toBoolean('opened')) {\r\n          this.component.open();\r\n        } else {\r\n          this.component.close();\r\n        }\r\n      }\r\n\r\n      this.set('opened', this.component.opened);\r\n    }\r\n  },\r\n\r\n  beforeDestroy: function() {\r\n    if (this.component) {\r\n      this.component.destroy();\r\n      delete this.component;\r\n    }\r\n  },\r\n\r\n  registerEvents: function(events) {\r\n    for (const event of events) {\r\n      this.component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n\r\n  toBoolean: function(name, props) {\r\n    const value = props ? props[name] : this.props[name];\r\n    \r\n    if (typeof value == 'string') {\r\n      return value != 'false';\r\n    }\r\n    \r\n    return !!value;\r\n  },\r\n});","dmx.Component('f7-gauge', {\r\n  initialData: {},\r\n\r\n  attributes: {\r\n    'type': {\r\n      type: String,\r\n      default: 'circle',\r\n      enum: ['circle', 'semicircle'],\r\n    },\r\n\r\n    'value': {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    'size': {\r\n      type: Number,\r\n      default: 200,\r\n    },\r\n\r\n    'bg-color': {\r\n      type: String,\r\n      default: 'transparent',\r\n    },\r\n\r\n    'border-bg-color': {\r\n      type: String,\r\n      default: '#eeeeee',\r\n    },\r\n\r\n    'border-color': {\r\n      type: String,\r\n      default: '#000000',\r\n    },\r\n\r\n    'border-width': {\r\n      type: String,\r\n      default: '10',\r\n    },\r\n\r\n    'value-text': {\r\n      type: String,\r\n      default: null,\r\n    },\r\n\r\n    'value-text-color': {\r\n      type: String,\r\n      default: '#000000',\r\n    },\r\n\r\n    'value-font-size': {\r\n      type: String,\r\n      default: '31',\r\n    },\r\n\r\n    'value-font-weight': {\r\n      type: String,\r\n      default: '500',\r\n    },\r\n\r\n    'label-text': {\r\n      type: String,\r\n      default: null,\r\n    },\r\n      \r\n    'label-text-color': {\r\n      type: String,\r\n      default: '#888888',\r\n    },\r\n\r\n    'label-font-size': {\r\n      type: String,\r\n      default: '14',\r\n    },\r\n\r\n    'label-font-weight': {\r\n      type: String,\r\n      default: '400',\r\n    },\r\n\r\n    'params': {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {},\r\n\r\n  events: {},\r\n\r\n  render: function(node) {\r\n    node.classList.add('gauge');\r\n\r\n    dmx.f7.ready(app => {\r\n      const gauge = this.component = app.gauge.create({\r\n        ...this.props.params,\r\n        el: node,\r\n        ...this.getProps(),\r\n      });\r\n    });\r\n  },\r\n\r\n  update: function(props) {\r\n    if (this.component) {\r\n      if (!dmx.equal(props, this.props)) {\r\n        this.component.update(this.getProps());\r\n      }\r\n    }\r\n  },\r\n\r\n  getProps: function() {\r\n    return {\r\n      type: this.props.type,\r\n      value: this.props.value,\r\n      size: this.props.size,\r\n      bgColor: this.props['bg-color'],\r\n      borderBgColor: this.props['border-bg-color'],\r\n      borderColor: this.props['border-color'],\r\n      borderWidth: this.props['border-width'],\r\n      valueText: this.props['value-text'],\r\n      valueTextColor: this.props['value-text-color'],\r\n      valueFontSize: this.props['value-font-size'],\r\n      valueFontWeight: this.props['value-font-weight'],\r\n      labelText: this.props['label-text'],\r\n      labelTextColor: this.props['label-text-color'],\r\n      labelFontSize: this.props['label-font-size'],\r\n      labelFontWeight: this.props['label-font-weight'],\r\n    };\r\n  },\r\n\r\n  beforeDestroy: function() {\r\n    if (this.component) {\r\n      this.component.destroy();\r\n      delete this.component;\r\n    }\r\n  }\r\n\r\n});","dmx.Component('f7-messages', {\r\n\r\n    attributes: {\r\n        'new-messages-first': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'messages': {\r\n            type: Array,\r\n            default: []\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        showTyping: function(message) {\r\n            if (!this.component) return;\r\n            this.component.showTyping(message);\r\n        },\r\n\r\n        hideTyping: function() {\r\n            if (!this.component) return;\r\n            this.component.hideTyping();\r\n        },\r\n\r\n        addMessage: function(message, method, animate) {\r\n            if (!this.component) return;\r\n            this.component.addMessage(message, method, animate);\r\n        },\r\n\r\n        addMessages: function(messages, method, animate) {\r\n            if (!this.component) return;\r\n            this.component.addMessages(messages, method, animate);\r\n        },\r\n\r\n        removeMessage: function(message) {\r\n            if (!this.component) return;\r\n            this.component.removeMessage(message);\r\n        },\r\n\r\n        removeMessages: function(messages) {\r\n            if (!this.component) return;\r\n            this.component.removeMessages(messages);\r\n        },\r\n\r\n        scroll: function(duration, position) {\r\n            if (!this.component) return;\r\n            this.component.scroll(duration, position);\r\n        },\r\n\r\n        renderMessages: function() {\r\n            if (!this.component) return;\r\n            this.component.renderMessages();\r\n        },\r\n\r\n        layout: function() {\r\n            if (!this.component) return;\r\n            this.component.layout();\r\n        },\r\n\r\n        clear: function() {\r\n            if (!this.component) return;\r\n            this.component.clear();\r\n        }\r\n    },\r\n\r\n    getProps: function() {\r\n        return Object.entries(this.props).reduce(function(o, entry) {\r\n            o[entry[0].replace(/\\-(.)?/g, function(m, c) { return c.toUpperCase() })] = entry[1];\r\n            return o;\r\n        }, {});\r\n    },\r\n\r\n    render: function (node) {\r\n        var self = this;\r\n        dmx.f7.ready(function(f7) {\r\n            self.component = f7.messages.create(Object.assign({\r\n                el: node\r\n            }, self.getProps()));\r\n        });\r\n        this.$parse();\r\n    },\r\n\r\n    update: function(props) {\r\n        if (Framework7.instance && !dmx.equal(props, this.props)) {\r\n            this.component.destroy();\r\n            this.component = Framework7.instance.messages.create(Object.assign({\r\n                el: this.$node\r\n            }, this.getProps()))\r\n        }\r\n    },\r\n\r\n    beforeDestroy: function() {\r\n        if (this.component) {\r\n            this.component.destroy();\r\n            this.component = undefined;\r\n        }\r\n    }\r\n\r\n});","dmx.Component('f7-notification', {\r\n  initialData: {\r\n    opened: false,\r\n  },\r\n\r\n  attributes: {\r\n    'icon': {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    'title': {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    'title-right-text': {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    'subtitle': {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    'text': {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    'close-button': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'close-timeout': {\r\n      type: Number,\r\n      default: undefined,\r\n    },\r\n\r\n    'close-on-click': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'swipe-to-close': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'css-class': {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    'opened': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'params': {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open: function() {\r\n      if (!this.component) return;\r\n      this.component.open();\r\n    },\r\n\r\n    close: function() {\r\n      if (!this.component) return;\r\n      this.component.close();\r\n    },\r\n  },\r\n\r\n  events: {\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event,\r\n    click: Event,\r\n  },\r\n\r\n  render: function(node) {\r\n    dmx.f7.ready(app => {\r\n      const notification = this.component = app.notification.create(this.getProps(),);\r\n\r\n      this.registerEvents(['open', 'opened', 'close', 'closed', 'click']);\r\n\r\n      notification.on('opened', () => {\r\n        this.set('opened', true);\r\n      });\r\n\r\n      notification.on('closed', () => {\r\n        this.set('opened', false);\r\n      });\r\n\r\n      if (this.toBoolean('opened')) {\r\n        notification.open();\r\n      }\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  update: function(props) {\r\n    if (this.component) {\r\n      if (this.toBoolean('opened', props) != this.toBoolean('opened')) {\r\n        if (this.toBoolean('opened')) {\r\n          this.component.open();\r\n        } else {\r\n          this.component.close();\r\n        }\r\n      }\r\n\r\n      this.set('opened', this.component.opened);\r\n    }\r\n  },\r\n\r\n  beforeDestroy: function() {\r\n    if (this.component) {\r\n      Framework7.instance.notification.destroy(this.component.el);\r\n      delete this.component;\r\n    }\r\n  },\r\n\r\n  getProps: function() {\r\n    return {\r\n      ...this.props.params,\r\n      icon: this.props.icon,\r\n      title: this.props.title,\r\n      titleRightText: this.props['title-right-text'],\r\n      subtitle: this.props.subtitle,\r\n      text: this.props.text,\r\n      closeButton: this.toBoolean('close-button'),\r\n      closeTimeout: this.props['close-timeout'],\r\n      closeOnClick: this.toBoolean('close-on-click'),\r\n      swipeToClose: this.toBoolean('swipe-to-close'),\r\n      cssClass: this.props['css-class'],\r\n    };\r\n  },\r\n\r\n  registerEvents: function(events) {\r\n    for (const event of events) {\r\n      this.component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n\r\n  toBoolean: function(name, props) {\r\n    const value = props ? props[name] : this.props[name];\r\n    \r\n    if (typeof value == 'string') {\r\n      return value != 'false';\r\n    }\r\n    \r\n    return !!value;\r\n  },\r\n});","dmx.Component('f7-photo-browser', {\r\n  initialData: {\r\n    activeIndex: 0,\r\n    exposed: false,\r\n    opened: false\r\n  },\r\n\r\n  attributes: {\r\n    'photos': {\r\n      type: Array,\r\n      default: [],\r\n    },\r\n\r\n    'exposition': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'exposition-hide-captions': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'swipe-to-close': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'popup-push': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'routable-modals': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'url': {\r\n      type: String,\r\n      default: 'photos/',\r\n    },\r\n\r\n    'type': {\r\n      type: String,\r\n      default: 'standalone',\r\n      enum: ['standalone', 'popup', 'page'],\r\n    },\r\n\r\n    'theme': {\r\n      type: String,\r\n      default: 'light',\r\n      enum: ['light', 'dark'],\r\n    },\r\n\r\n    'captions-theme': {\r\n      type: String,\r\n      default: undefined, // undefined will use the same as theme\r\n      enum: [undefined, 'light', 'dark'],\r\n    },\r\n\r\n    'navbar': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'toolbar': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'page-back-link-text': {\r\n      type: String,\r\n      default: 'Back',\r\n    },\r\n\r\n    'page-close-link-text': {\r\n      type: String,\r\n      default: 'Close',\r\n    },\r\n\r\n    'navbar-show-count': {\r\n      type: [Boolean, String],\r\n      default: undefined,\r\n    },\r\n\r\n    'navbar-of-text': {\r\n      type: String,\r\n      default: 'of',\r\n    },\r\n\r\n    'icons-color': {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    'params': {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open: function(index) {\r\n      if (!this.component) return;\r\n      this.component.open(index);\r\n    },\r\n\r\n    close: function() {\r\n      if (!this.component) return;\r\n      this.component.close();\r\n    },\r\n\r\n    expositionToggle: function() {\r\n      if (!this.component) return;\r\n      this.component.expositionToggle();\r\n    },\r\n\r\n    expositionEnable: function() {\r\n      if (!this.component) return;\r\n      this.component.expositionEnable();\r\n    },\r\n\r\n    expositionDisable: function() {\r\n      if (!this.component) return;\r\n      this.component.expositionDisable();\r\n    }\r\n  },\r\n\r\n  events: {\r\n    tap: Event,\r\n    click: Event,\r\n    doubleTap: Event,\r\n    doubleClick: Event,\r\n    slideChange: Event,\r\n    lazyImageLoad: Event,\r\n    lazyImageReady: Event,\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event\r\n  },\r\n\r\n  render: function(node) {\r\n    dmx.f7.ready(app => {\r\n      this.createComponent();\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  update: function(props) {\r\n    if (this.component) {\r\n      if (!dmx.equal(props, this.props)) {\r\n        this.component.destroy();\r\n        this.createComponent();\r\n      }\r\n\r\n      this.set('activeIndex', this.component.activeIndex);\r\n      this.set('exposed', this.component.exposed);\r\n      this.set('opened', this.component.opened);\r\n    }\r\n  },\r\n\r\n  beforeDestroy: function() {\r\n    if (this.component) {\r\n      this.component.destroy();\r\n      delete this.component;\r\n    }\r\n  },\r\n\r\n  createComponent: function() {\r\n    const photoBrowser = this.component = Framework7.instance.photoBrowser.create({\r\n      ...this.props.params,\r\n      ...this.getProps(),\r\n    });\r\n\r\n    this.registerEvents(Object.keys(this.events));\r\n\r\n    photoBrowser.on('opened', () => {\r\n      this.set('opened', true);\r\n    });\r\n\r\n    photoBrowser.on('closed', () => {\r\n      this.set('opened', false);\r\n    });\r\n  },\r\n\r\n  getProps: function() {\r\n    return {\r\n      photos: this.props.photos,\r\n      exposition: this.toBoolean('exposition'),\r\n      expositionHideCaptions: this.toBoolean('exposition-hide-captions'),\r\n      swipeToClose: this.toBoolean('swipe-to-close'),\r\n      popupPush: this.toBoolean('popup-push'),\r\n      routableModals: this.toBoolean('routable-modals'),\r\n      url: this.props.url,\r\n      type: this.props.type,\r\n      theme: this.props.theme,\r\n      captionsTheme: this.props['captions-theme'],\r\n      navbar: this.toBoolean('navbar'),\r\n      toolbar: this.toBoolean('toolbar'),\r\n      pageBackLinkText: this.props['page-back-link-text'],\r\n      popupCloseLinkText: this.props['page-close-link-text'],\r\n      navbarShowCount: this.toBoolean('navbar-show-count'),\r\n      navbarOfText: this.props['navbar-of-text'],\r\n      iconsColor: this.props['icons-color'],\r\n    };\r\n  },\r\n  \r\n  registerEvents: function(events) {\r\n    for (const event of events) {\r\n      this.component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n\r\n  toBoolean: function(name, props) {\r\n    const value = props ? props[name] : this.props[name];\r\n    \r\n    if (typeof value == 'string') {\r\n      return value != 'false';\r\n    }\r\n    \r\n    return !!value;\r\n  },\r\n\r\n});","dmx.Component('f7-progressbar', {\r\n  initialData: {\r\n    progress: 0\r\n  },\r\n\r\n  attributes: {\r\n    'progress': {\r\n      type: Number,\r\n      default: null,\r\n    },\r\n\r\n    'color': {\r\n      type: String,\r\n      default: 'default',\r\n      enum: ['default', 'red', 'green', 'blue', 'pink', 'yellow', 'orange', 'purple', 'deeppurple', 'lightblue', 'teal', 'lime', 'deeporange', 'gray', 'white', 'black', 'multi'],\r\n    },\r\n\r\n    'hidden': {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    set: function(progress, duration) {\r\n      if (!this.component) return;\r\n      this.component.set(progress, duration);\r\n    },\r\n\r\n    show: function() {\r\n      if (!this.component) return;\r\n      this.component.show();\r\n    },\r\n\r\n    hide: function() {\r\n      if (!this.component) return;\r\n      this.component.hide();\r\n    },\r\n  },\r\n\r\n  render: function (node) {\r\n    var self = this;\r\n\r\n    node.classList.add('progressbar');\r\n\r\n    dmx.f7.ready(app => {\r\n      this.component = {\r\n        set: app.progressbar.set.bind(app.progressbar, node),\r\n        show: app.progressbar.show.bind(app.progressbar, node),\r\n        hide: app.progressbar.hide.bind(app.progressbar, node),\r\n      };\r\n\r\n      this.update({});\r\n    });\r\n  },\r\n\r\n  update: function(props) {\r\n    if (this.component) {\r\n      if (props.hidden != this.props.hidden) {\r\n        if (this.props.hidden) {\r\n          this.component.hide();\r\n        } else {\r\n          this.component.show(this.props.progress, this.props.color);\r\n        }\r\n      }\r\n\r\n      if (props.color != this.props.color) {\r\n        if (props.color) {\r\n          this.$node.classList.remove('color-' + props.color);\r\n        }\r\n\r\n        if (this.props.color != 'default') {\r\n          this.$node.classList.add('color-' + this.props.color);\r\n        }\r\n      }\r\n\r\n      if (props.progress != this.props.progress) {\r\n        this.component.set(this.props.progress);\r\n      }\r\n    }\r\n  },\r\n});","dmx.Component('f7-toggle', {\r\n  initialData: {\r\n    checked: false,\r\n  },\r\n\r\n  attributes: {\r\n    'checked': {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    'params': {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    toggle: function() {\r\n      if (!this.component) return;\r\n      this.component.toggle();\r\n    },\r\n  },\r\n\r\n  events: {\r\n    change: Event,\r\n  },\r\n\r\n  render: function (node) {\r\n    dmx.f7.ready(app => {\r\n      const toggle = this.component = app.toggle.create({\r\n        ...this.props.params,\r\n        el: node,\r\n      });\r\n\r\n      toggle.on('change', () => {\r\n        this.set('checked', toggle.checked);\r\n      });\r\n\r\n      if (toggle.checked != this.props.checked) {\r\n        toggle.toggle();\r\n      }\r\n\r\n      this.set('checked', toggle.checked);\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  update: function(props) {\r\n    if (this.component) {\r\n      if (props.checked != this.props.checked) {\r\n        if(this.component.checked != this.props.checked) {\r\n          this.component.toggle();\r\n        }\r\n      }\r\n\r\n      this.set('checked', this.component.checked);\r\n    }\r\n  },\r\n\r\n  beforeDestroy: function(props) {\r\n    if (this.component) {\r\n      Framework7.instance.toggle.destroy(this.component.el);\r\n      delete this.component;\r\n    }\r\n  },\r\n});","dmx.Component('f7-range', {\r\n  initialData: {\r\n    value: null\r\n  },\r\n\r\n  attributes: {\r\n    'value': {\r\n      type: Number,\r\n      default: null, // defaults to center\r\n    },\r\n\r\n    'min': {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    'max': {\r\n      type: Number,\r\n      default: 100,\r\n    },\r\n\r\n    'step': {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n\r\n    'label': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'dragable-bar': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'no-draggable-bar': { // for backwards compatibility\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    'vertical': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'vertical-reversed': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'scale': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'scale-steps': {\r\n      type: Number,\r\n      default: 5,\r\n    },\r\n\r\n    'scale-sub-steps': {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    'params': {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    setValue: function(value) {\r\n      if (!this.component) return;\r\n      this.component.setValue(value);\r\n    },\r\n  },\r\n\r\n  events: {\r\n    change: Event,\r\n    changed: Event,\r\n  },\r\n\r\n  render: function(node) {\r\n    dmx.f7.ready(app => {\r\n      const range = this.component = app.range.create({\r\n        ...this.props.params,\r\n        el: node,\r\n        value: this.props.value,\r\n        min: this.props.min,\r\n        max: this.props.max,\r\n        step: this.props.step,\r\n        label: this.toBoolean('label'),\r\n        draggableBar: this.props['no-draggable-bar'] ? false : this.toBoolean('draggable-bar'),\r\n        vertical: this.toBoolean('vertical'),\r\n        verticalReversed: this.toBoolean('vertical-reversed'),\r\n        scale: this.toBoolean('scale'),\r\n        scaleSteps: this.props['scale-steps'],\r\n        scaleSubSteps: this.props['scale-sub-steps'],\r\n      });\r\n\r\n      range.on('change', (range, value) => {\r\n        this.set('value', value);\r\n        this.dispatchEvent('change');\r\n      });\r\n\r\n      range.on('changed', () => this.dispatchEvent('changed'));\r\n\r\n      this.set('value', range.value);\r\n    });\r\n  },\r\n\r\n  update: function(props) {\r\n    if (this.component) {\r\n      if (props.value != this.props.value) {\r\n        this.component.setValue(this.props.value);\r\n      }\r\n    }\r\n  },\r\n\r\n  beforeDestroy: function() {\r\n    if (this.component) {\r\n      this.component.destroy();\r\n      delete this.component;\r\n    }\r\n  },\r\n\r\n  toBoolean: function(name, props) {\r\n    const value = props ? props[name] : this.props[name];\r\n    \r\n    if (typeof value == 'string') {\r\n      return value != 'false';\r\n    }\r\n    \r\n    return !!value;\r\n  },\r\n});","dmx.Component('f7-range-dual', {\r\n  extends: 'f7-range',\r\n\r\n  initialData: {\r\n    start: null,\r\n    end: null\r\n  },\r\n\r\n  attributes: {\r\n    'value-start': {\r\n      type: Number,\r\n      default: null,\r\n    },\r\n\r\n    'value-end': {\r\n      type: Number,\r\n      default: null,\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    setValues: function(start, end) {\r\n      if (!this.component) return;\r\n      this.component.setValue([start, end]);\r\n    },\r\n  },\r\n\r\n  render: function(node) {\r\n    dmx.f7.ready(app => {\r\n      const range = this.component = app.range.create({\r\n        ...this.props.params,\r\n        el: node,\r\n        dual: true,\r\n        value: [this.props['value-start'], this.props['value-end']],\r\n        min: this.props.min,\r\n        max: this.props.max,\r\n        step: this.props.step,\r\n        label: this.toBoolean('label'),\r\n        draggableBar: this.props['no-draggable-bar'] ? false : this.toBoolean('draggable-bar'),\r\n        vertical: this.toBoolean('vertical'),\r\n        verticalReversed: this.toBoolean('vertical-reversed'),\r\n        scale: this.toBoolean('scale'),\r\n        scaleSteps: this.props['scale-steps'],\r\n        scaleSubSteps: this.props['scale-sub-steps'],\r\n      });\r\n\r\n      range.on('change', (range, value) => {\r\n        this.set('start', range.value[0]);\r\n        this.set('end', range.value[1]);\r\n        this.dispatchEvent('change');\r\n      });\r\n\r\n      range.on('changed', () => this.dispatchEvent('changed'));\r\n\r\n      this.set('start', range.value[0]);\r\n      this.set('end', range.value[1]);\r\n    });\r\n  },\r\n\r\n  update: function(props) {\r\n    if (this.component) {\r\n      if (props['value-start'] != this.props['value-start'] || props['value-end'] != this.props['value-end']) {\r\n        this.component.setValue([this.props['value-start'], this.props['value-end']]);\r\n      }\r\n    }\r\n  },\r\n\r\n  toBoolean: function(name, props) {\r\n    const value = props ? props[name] : this.props[name];\r\n    \r\n    if (typeof value == 'string') {\r\n      return value != 'false';\r\n    }\r\n    \r\n    return !!value;\r\n  },\r\n});","dmx.Component('f7-ptr', {\r\n\r\n  initialData: {\r\n    refreshing: false\r\n  },\r\n\r\n  methods: {\r\n    done: function() {\r\n      if (!this.ptr) return;\r\n      this.ptr.done();\r\n    },\r\n\r\n    refresh: function() {\r\n      if (!this.ptr) return;\r\n      this.ptr.refresh();\r\n    },\r\n  },\r\n\r\n  events: {\r\n    pullstart: Event,\r\n    pullmove: Event,\r\n    pullend: Event,\r\n    refresh: Event,\r\n    done: Event,\r\n  },\r\n\r\n  render: function(node) {\r\n    const bottom = node.classList.contains('ptr-bottom');\r\n\r\n    // add class if needed\r\n    node.classList.add('ptr-content');\r\n\r\n    if (!node[(bottom ? 'last' : 'first') + 'ElementChild'].classList.contains('ptr-preloader')) {\r\n      // add preloader html if not in dom\r\n      node.insertAdjacentHTML(bottom ? 'beforeend' : 'afterbegin', '<div class=\"ptr-preloader\"><div class=\"preloader\"></div><div class=\"ptr-arrow\"></div></div>');\r\n      dmx.f7.ready(app => app.preloader.init(node.querySelector('.preloader')));\r\n    }\r\n\r\n    dmx.f7.ready(app => {\r\n      // get/create ptr instance\r\n      this.ptr = app.ptr.get(node) || app.ptr.create(node);\r\n      // delegate events\r\n      this.ptr.on('pullStart', this.dispatchEvent.bind(this, 'pullstart'));\r\n      this.ptr.on('pullMove', this.dispatchEvent.bind(this, 'pullmove'));\r\n      this.ptr.on('pullEnd', this.dispatchEvent.bind(this, 'pullend'));\r\n      this.ptr.on('refresh', this.dispatchEvent.bind(this, 'refresh'));\r\n      this.ptr.on('done', this.dispatchEvent.bind(this, 'done'));\r\n      // update data\r\n      this.ptr.on('refresh', () => this.set('refreshing', true));\r\n      this.ptr.on('done', () => this.set('refershing', false));\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n});","dmx.Component('f7-sheet-modal', {\r\n  initialData: {\r\n    opened: false,\r\n  },\r\n\r\n  attributes: {\r\n    'backdrop': {\r\n      type: [Boolean, String],\r\n      default: undefined, // true for MD and Aurora, false for iOS\r\n    },\r\n\r\n    'close-by-backdrop-click': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'close-by-outside-click': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'close-on-escape': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'animate': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'swipe-to-close': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'swipe-to-step': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'push': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'opened': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'params': {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open: function(animate) {\r\n      if (!this.component) return;\r\n      this.component.open(animate);\r\n    },\r\n\r\n    close: function(animate) {\r\n      if (!this.component) return;\r\n      this.component.close(animate);\r\n    },\r\n\r\n    stepOpen: function() {\r\n      if (!this.component) return;\r\n      this.component.stepOpen();\r\n    },\r\n\r\n    stepClose: function() {\r\n      if (!this.component) return;\r\n      this.component.stepClose();\r\n    },\r\n\r\n    stepToggle: function() {\r\n      if (!this.component) return;\r\n      this.component.stepToggle();\r\n    },\r\n\r\n    setSwipeSet: function() {\r\n      if (!this.component) return;\r\n      this.component.setSwipeSet();\r\n    }\r\n  },\r\n\r\n  events: {\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event,\r\n    stepOpen: Event,\r\n    stepClose: Event,\r\n    stepProgress: Event,\r\n  },\r\n\r\n  render: function(node) {\r\n    node.classList.add('sheet-modal');\r\n\r\n    dmx.f7.ready(app => {\r\n      const sheet = this.component = app.sheet.create({\r\n        ...this.props.params,\r\n        el: node,\r\n        backdrop: this.toBoolean('backdrop'),\r\n        closeByOutsideClick: this.toBoolean('close-by-outside-click'),\r\n        closeOnEscape: this.toBoolean('close-on-escape'),\r\n        animate: this.toBoolean('animate'),\r\n        swipeToClose: this.toBoolean('swipe-to-close'),\r\n        swipeToStep: this.toBoolean('swipe-to-step'),\r\n        push: this.toBoolean('push'),\r\n      });\r\n\r\n      this.registerEvents(['open', 'opened', 'close', 'closed', 'stepOpen', 'stepClose', 'stepProgress']);\r\n\r\n      sheet.on('opened', () => {\r\n        this.set('opened', true);\r\n      });\r\n\r\n      sheet.on('closed', () => {\r\n        this.set('opened', false);\r\n      });\r\n\r\n      if (this.toBoolean('opened')) {\r\n        sheet.open(false);\r\n      }\r\n    });\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  update: function(props) {\r\n    if (this.component) {\r\n      if (this.toBoolean('opened', props) != this.toBoolean('opened')) {\r\n        if (this.toBoolean('opened')) {\r\n          this.component.open();\r\n        } else {\r\n          this.component.close();\r\n        }\r\n      }\r\n\r\n      this.set(\"opened\", this.component.opened);\r\n    }\r\n  },\r\n\r\n  beforeDestroy: function() {\r\n    if (this.component) {\r\n      this.component.destroy();\r\n      delete this.component;\r\n    }\r\n  },\r\n\r\n  registerEvents: function(events) {\r\n    for (const event of events) {\r\n      this.component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n\r\n  toBoolean: function(name, props) {\r\n    const value = props ? props[name] : this.props[name];\r\n    \r\n    if (typeof value == 'string') {\r\n      return value != 'false';\r\n    }\r\n    \r\n    return !!value;\r\n  },\r\n});\r\n","dmx.Component('f7-accordion', {\r\n  initialData: {\r\n    opened: false,\r\n  },\r\n\r\n  attributes: {\r\n    'opened': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open: function() {\r\n      Framework7.instance.accordion.open(this.$node);\r\n    },\r\n\r\n    close: function() {\r\n      Framework7.instance.accordion.close(this.$node);\r\n    },\r\n\r\n    toggle: function() {\r\n      Framework7.instance.accordion.toggle(this.$node);\r\n    },\r\n  },\r\n\r\n  events: {\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event,\r\n  },\r\n\r\n  render: function(node) {\r\n    for (const event of Object.keys(this.events)) {\r\n      node.addEventListener(`accordion:${event}`, () => {\r\n        this.dispatchEvent(event);\r\n      });\r\n    }\r\n\r\n    node.addEventListener('accordion:opened', () => {\r\n      this.set('opened', true);\r\n    });\r\n\r\n    node.addEventListener('accordion:closed', () => {\r\n      this.set('opened', false);\r\n    });\r\n\r\n    if (this.toBoolean('opened')) {\r\n      Framework7.instance.accordion.open(node);\r\n    }\r\n\r\n    this.$parse();\r\n  },\r\n\r\n  update: function(props) {\r\n    if (this.toBoolean('opened', props) != this.toBoolean('opened')) {\r\n      if (this.toBoolean('opened')) {\r\n        Framework7.instance.accordion.open(this.$node)\r\n      } else {\r\n        Framework7.instance.accordion.close(this.$node)\r\n      }\r\n    }\r\n  },\r\n\r\n  toBoolean: function(name, props) {\r\n    const value = props ? props[name] : this.props[name];\r\n    \r\n    if (typeof value == 'string') {\r\n      return value != 'false';\r\n    }\r\n    \r\n    return !!value;\r\n  },\r\n});","dmx.Component('f7-autocomplete', {\r\n  initialData: {\r\n    value: null,\r\n    opened: false,\r\n  },\r\n\r\n  ui: {\r\n    template: '<input id=\"@@id@@\" name=\"@@id@@\" type=\"text\" is=\"dmx-f7-autocomplete\">',\r\n    extendOf: ['dmx-input', 'f7-5-input'],\r\n    replaces: 'f7-5-input',\r\n    priority: 100\r\n  },\r\n\r\n  attributes: {\r\n    /*'open-in': {\r\n      type: String,\r\n      default: 'page',\r\n      enum: ['page', 'popup', 'dropdown'],\r\n    },*/\r\n\r\n    'limit': {\r\n      type: Number,\r\n      default: undefined,\r\n    },\r\n\r\n    'preloader': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'preloader-color': {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    'value': {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    'value-property': {\r\n      ui: {\r\n        scopeField: 'data'\r\n      },\r\n      type: String,\r\n      default: 'id',\r\n    },\r\n\r\n    'text-property': {\r\n      ui: {\r\n        scopeField: 'data'\r\n      },\r\n      type: String,\r\n      default: 'text',\r\n    },\r\n\r\n    'input-events': {\r\n      type: String,\r\n      default: 'input',\r\n    },\r\n\r\n    'highlight-matches': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'typeahead': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'dropdown-placeholder-text': {\r\n      type: String,\r\n      default: undefined,\r\n    },\r\n\r\n    'update-input-value-on-select': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'expand-input': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'data': {\r\n      type: Array,\r\n      default: [],\r\n    },\r\n\r\n    'params': {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open: function() {\r\n      if (!this.component) return;\r\n      this.component.open();\r\n    },\r\n\r\n    close: function() {\r\n      if (!this.component) return;\r\n      this.component.close();\r\n    },\r\n\r\n    preloaderShow: function() {\r\n      if (!this.component) return;\r\n      this.component.preloaderShow();\r\n    },\r\n\r\n    preloaderHide: function() {\r\n      if (!this.component) return;\r\n      this.component.preloaderHide();\r\n    },\r\n  },\r\n\r\n  events: {\r\n    change: Event,\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event,\r\n  },\r\n\r\n  render: function(node) {\r\n    dmx.f7.ready(app => {\r\n      const autocomplete = this.component = app.autocomplete.create({\r\n        ...this.props.params,\r\n        openIn: 'dropdown',\r\n        inputEl: node,\r\n        limit: this.props.limit,\r\n        preloader: this.toBoolean('preloader'),\r\n        preloaderColor: this.props['preloader-color'],\r\n        value: Array.isArray(this.props.value) ? this.props.value : [this.props.value],\r\n        valueProperty: this.props['value-property'],\r\n        textProperty: this.props['text-property'],\r\n        inputEvents: this.props['input-events'],\r\n        highlightMatches: this.props['highlight-matches'],\r\n        typeahead: this.props.typeahead,\r\n        dropdownPlaceholderText: this.props['dropdown-placeholder-text'],\r\n        updateInputValueOnSelect: this.props['update-input-value-on-select'],\r\n        expandInput: this.props['expand-input'],\r\n        source: this.search.bind(this),\r\n      });\r\n\r\n      this.registerEvents(['change', 'open', 'opened', 'close', 'closed']);\r\n\r\n      autocomplete.on('change', () => {\r\n        this.set('value', autocomplete.value[0]);\r\n      });\r\n\r\n      autocomplete.on('opened', () => {\r\n        this.set('opened', true);\r\n      });\r\n\r\n      autocomplete.on('closed', () => {\r\n        this.set('opened', false);\r\n      });\r\n    });\r\n  },\r\n\r\n  beforeDestroy: function() {\r\n    if (this.component) {\r\n      this.component.destroy();\r\n      delete this.component;\r\n    }\r\n  },\r\n\r\n  search: function(query, render) {\r\n    render(query.length ? this.props.data.filter(item => {\r\n      if (typeof item == 'object') {\r\n        item = dmx.parse(this.props['text-property'], dmx.DataScope(item));\r\n      }\r\n\r\n      if (typeof item != 'string') return false;\r\n      return item.toLowerCase().includes(query.toLowerCase());\r\n    }) : []);\r\n  },\r\n\r\n  registerEvents: function(events) {\r\n    for (const event of events) {\r\n      this.component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n\r\n  toBoolean: function(name, props) {\r\n    const value = props ? props[name] : this.props[name];\r\n    \r\n    if (typeof value == 'string') {\r\n      return value != 'false';\r\n    }\r\n    \r\n    return !!value;\r\n  },\r\n});","dmx.Component('f7-calendar', {\r\n  initialData: {\r\n    value: [],\r\n    opened: false,\r\n  },\r\n\r\n  ui: {\r\n    template: '<input id=\"@@id@@\" name=\"@@id@@\" type=\"text\" is=\"dmx-f7-calendar\">',\r\n    extendOf: ['dmx-input', 'f7-5-input'],\r\n    replaces: 'f7-5-input',\r\n    priority: 100\r\n  },\r\n\r\n  attributes: {\r\n    'locale': {\r\n      type: String,\r\n      default: undefined, // will use browser locale\r\n    },\r\n\r\n    'value': {\r\n      type: Array,\r\n      default: undefined,\r\n    },\r\n\r\n    'first-day': {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n\r\n    'weekend-days': {\r\n      type: Array,\r\n      default: [0, 6],\r\n    },\r\n\r\n    // dateFormat?\r\n\r\n    'multiple': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'range-picker': { // not compatible with multiple\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'range-picker-min-days': {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n\r\n    'range-picker-max-days': {\r\n      type: Number,\r\n      default: 0, // 0 means no maximum\r\n    },\r\n\r\n    'direction': {\r\n      type: String,\r\n      default: 'horizontal',\r\n      enum: ['horizontal', 'vertical'],\r\n      validate: value => ['horizontal', 'vertical'].includes(value),\r\n    },\r\n\r\n    'min-date': {\r\n      type: Date,\r\n      default: null,\r\n    },\r\n\r\n    'max-date': {\r\n      type: Date,\r\n      default: null,\r\n    },\r\n\r\n    'touch-move': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'animate': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'close-on-select': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'week-header': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'month-selector': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'month-picker': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'year-selector': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'year-picker': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'year-picker-min': {\r\n      type: Number,\r\n      default: undefined,\r\n    },\r\n\r\n    'year-picker-max': {\r\n      type: Number,\r\n      default: undefined,\r\n    },\r\n\r\n    'time-picker': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    // timePickerFormat?\r\n\r\n    'time-picker-placeholder': {\r\n      type: String,\r\n      default: 'Select time',\r\n    },\r\n\r\n    // Container/opener-specific parameters\r\n\r\n    'open-in': {\r\n      type: String,\r\n      default: 'auto',\r\n      enum: ['auto', 'popover', 'sheet', 'customModal'],\r\n      validate: value => ['auto', 'popover', 'sheet', 'customModal'].includes(value),\r\n    },\r\n\r\n    'sheet-push': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    // sheetSwipeToClose?\r\n\r\n    'scroll-to-input': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'input-read-only': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'close-by-outside-click': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'toolbar': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'toolbar-close-text': {\r\n      type: String,\r\n      default: 'Done',\r\n    },\r\n\r\n    'header': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'header-placeholder': {\r\n      type: String,\r\n      default: 'Select date',\r\n    },\r\n\r\n    // backdrop?\r\n\r\n    'close-by-backdrop-click': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'params': {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  // TODO: implement methods\r\n  methods: {\r\n    setValue: function(value) {},\r\n    addValue: function(value) {},\r\n    nextMonth: function(duration) {},\r\n    prevMonth: function(duration) {},\r\n    nextYear: function() {},\r\n    prevYear: function() {},\r\n    setYearMonth: function(year, month, duration) {},\r\n    open: function() {},\r\n    close: function() {},\r\n  },\r\n\r\n  events: {\r\n    dayclick: Event,\r\n    change: Event,\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event,\r\n  },\r\n\r\n  render: function(node) {\r\n    dmx.f7.ready(app => {\r\n      const calendar = this.component = app.calendar.create({\r\n        ...this.props.params,\r\n        inputEl: node,\r\n        ...this.getProps(),\r\n      });\r\n\r\n      this.registerEvents(['change', 'open', 'opened', 'close', 'closed']);\r\n\r\n      calendar.on('opened', () => {\r\n        this.set('opened', true);\r\n      });\r\n\r\n      calendar.on('closed', () => {\r\n        this.set('opened', false);\r\n      });\r\n    });\r\n  },\r\n\r\n  update: function(props) {\r\n    if (this.component) {\r\n      if (!dmx.equal(props, this.props)) {\r\n        this.component.update(this.getProps());\r\n      }\r\n    }\r\n  },\r\n\r\n  beforeDestroy: function() {\r\n    if (this.component) {\r\n      this.component.destroy();\r\n      delete this.component;\r\n    }\r\n  },\r\n\r\n  getProps: function() {\r\n    return {\r\n      locale: this.props.locale,\r\n      value: this.props.value,\r\n      firstDay: this.props['first-day'],\r\n      weekendDays: this.props['weekend-days'],\r\n      multiple: this.toBoolean('multiple'),\r\n      rangePicker: this.toBoolean('range-picker'),\r\n      rangePickerMinDays: this.props['range-picker-min-days'],\r\n      rangePickerMaxDays: this.props['range-picker-max-days'],\r\n      direction: this.props.direction,\r\n      minDate: this.toDate('min-date'),\r\n      maxDate: this.toDate('max-date'),\r\n      touchMove: this.toBoolean('touch-move'),\r\n      animate: this.toBoolean('animate'),\r\n      closeOnSelect: this.toBoolean('close-on-select'),\r\n      weekHeader: this.toBoolean('week-header'),\r\n      monthSelector: this.toBoolean('month-selector'),\r\n      monthPicker: this.toBoolean('month-picker'),\r\n      yearSelector: this.toBoolean('year-selector'),\r\n      yearPicker: this.toBoolean('year-picker'),\r\n      yearPickerMin: this.props['year-picker-min'],\r\n      yearPickerMax: this.props['year-picker-max'],\r\n      timePicker: this.toBoolean('time-picker'),\r\n      timePickerPlaceholder: this.props['time-picker-placeholder'],\r\n      openIn: this.props['open-in'],\r\n      sheetPush: this.toBoolean('sheet-push'),\r\n      scrollToInput: this.toBoolean('scroll-to-input'),\r\n      inputReadOnly: this.toBoolean('input-read-only'),\r\n      closeByOutsideClick: this.toBoolean('close-by-outside-click'),\r\n      toolbar: this.toBoolean('toolbar'),\r\n      toolbarCloseText: this.props['toolbar-close-text'],\r\n      header: this.toBoolean('header'),\r\n      headerPlaceholder: this.props['header-placeholder'],\r\n      closeByBackdropClick: this.toBoolean('close-by-backdrop-click'),\r\n    };\r\n  },\r\n\r\n  registerEvents: function(events) {\r\n    for (const event of events) {\r\n      this.component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n\r\n  toBoolean: function(name, props) {\r\n    const value = props ? props[name] : this.props[name];\r\n    \r\n    if (typeof value == 'string') {\r\n      return value != 'false';\r\n    }\r\n    \r\n    return !!value;\r\n  },\r\n\r\n  toDate: function(name, props) {\r\n    const value = props ? props[name] : this.props[name];\r\n    \r\n    let date = null;\r\n    if (value) {\r\n      date = new Date(value);\r\n      if (date.toString() == 'Invalid Date') {\r\n        date = null;\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n});","dmx.Component('f7-picker', {\r\n  initialData: {\r\n    value: [],\r\n    opened: false,\r\n  },\r\n\r\n  ui: {\r\n    template: '<input id=\"@@id@@\" name=\"@@id@@\" type=\"text\" is=\"dmx-f7-picker\">',\r\n    extendOf: ['dmx-input', 'f7-5-input'],\r\n    replaces: 'f7-5-input',\r\n    priority: 100\r\n  },\r\n\r\n  attributes: {\r\n    'rotate-effect': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'momentum-ratio': {\r\n      type: Number,\r\n      default: 7,\r\n    },\r\n\r\n    'mousewheel': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'update-values-on-momentum': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'update-values-on-touchmove': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'update-values-on-mousewheel': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'free-mode': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'value': {\r\n      type: Array,\r\n      default: undefined,\r\n    },\r\n    \r\n    'cols': {\r\n      ui: {\r\n        multiValue: true,\r\n        isDynamic: true,\r\n        variables: [\r\n          {name: 'textAlign', type: 'droplist', title: 'Text Align', values: [{value:'left',title:'Left'},{value:'center',title:'Center'},{value:'right',title:'Right'}], objectKey: 'textAlign', enclose: 'single'},\r\n          {name: 'dataSource', type: 'text', title: 'Data Source', dataBindings: true, objectKey: 'source'},\r\n          {name: 'valueProperty', type: 'text', title: 'Value Property', dataBindings: true, scopeField: 'dataSource', objectKey: 'valueProperty', enclose: 'single'},\r\n          {name: 'displayProperty', type: 'text', title: 'Display Property', dataBindings: true, scopeField: 'dataSource', objectKey: 'displayProperty', enclose: 'single'},\r\n        ]\r\n      },\r\n      type: Array,\r\n      default: [],\r\n    },\r\n\r\n    // Container/opener-specific parameters\r\n\r\n    'open-in': {\r\n      type: String,\r\n      default: 'auto',\r\n      enum: ['auto', 'popover', 'sheet'],\r\n      validate: value => ['auto', 'popover', 'sheet'].includes(value),\r\n    },\r\n\r\n    'backdrop': {\r\n      type: [Boolean, String],\r\n      default: undefined,\r\n    },\r\n\r\n    'sheet-push': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'sheet-swipe-to-close': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n\r\n    'scroll-to-input': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'input-read-only': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'close-by-outside-click': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'toolbar': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'toolbar-close-text': {\r\n      type: String,\r\n      default: 'Done',\r\n    },\r\n\r\n    'routable-modals': {\r\n      type: [Boolean, String],\r\n      default: true,\r\n    },\r\n\r\n    'url': {\r\n      type: String,\r\n      default: 'select/',\r\n    },\r\n\r\n    'opened': {\r\n      type: [Boolean, String],\r\n      default: false,\r\n    },\r\n    \r\n    'params': {\r\n      type: Object,\r\n      default: {},\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    open: function() {\r\n      if (!this.component) return;\r\n      this.component.open();\r\n    },\r\n\r\n    close: function() {\r\n      if (!this.component) return;\r\n      this.component.close();\r\n    },\r\n  },\r\n\r\n  events: {\r\n    change: Event,\r\n    init: Event,\r\n    open: Event,\r\n    opened: Event,\r\n    close: Event,\r\n    closed: Event,\r\n  },\r\n\r\n  render: function(node) {\r\n    dmx.f7.ready(app => {\r\n      this.createComponent();\r\n    });\r\n  },\r\n\r\n  update: function(props) {\r\n    if (this.component) {\r\n      if (this.toBoolean('opened', props) != this.toBoolean('opened')) {\r\n        if (this.toBoolean('opened')) {\r\n          this.component.open();\r\n        } else {\r\n          this.component.close();\r\n        }\r\n      }\r\n\r\n      if (!dmx.equal(props.cols, this.props.cols)) {\r\n        this.component.destroy();\r\n        this.createComponent();\r\n      }\r\n    }\r\n  },\r\n\r\n  beforeDestroy: function() {\r\n    if (this.component) {\r\n      this.component.destroy();\r\n      delete this.component;\r\n    }\r\n  },\r\n\r\n  createComponent: function() {\r\n    const picker = this.component = Framework7.instance.picker.create(this.getParams());\r\n\r\n    this.registerEvents(Object.keys(this.events));\r\n\r\n    picker.on('init', () => {\r\n      this.set('value', picker.value);\r\n    });\r\n\r\n    picker.on('change', () => {\r\n      this.set('value', picker.value);\r\n    });\r\n\r\n    picker.on('opened', () => {\r\n      this.set('opened', true);\r\n    });\r\n\r\n    picker.on('closed', () => {\r\n      this.set('closed', false);\r\n    });\r\n\r\n    if (this.toBoolean('opened')) {\r\n      picker.open();\r\n    }\r\n  },\r\n\r\n  getParams: function() {\r\n    return {\r\n      ...this.props.params,\r\n      inputEl: this.$node,\r\n      rotateEffect: this.toBoolean('rotate-effect'),\r\n      momentumRatio: this.props['momentum-ratio'],\r\n      mousewheel: this.toBoolean('mousewheel'),\r\n      updateValuesOnMomentum: this.toBoolean('update-values-on-momentum'),\r\n      updateValuesOnTouchmove: this.toBoolean('update-values-on-touchmove'),\r\n      updateValuesOnMousewheel: this.toBoolean('update-values-on-mousewheel'),\r\n      freeMode: this.toBoolean('free-mode'),\r\n      value: this.props.value,\r\n      cols: this.getCols(),\r\n      openIn: this.props['open-in'],\r\n      backdrop: this.props.backdrop ? this.toBoolean('backdrop') : undefined,\r\n      sheetPush: this.toBoolean('sheet-push'),\r\n      sheetSwipeToClose: this.toBoolean('sheet-swipe-to-close'),\r\n      scrollToInput: this.toBoolean('scroll-to-input'),\r\n      inputReadOnly\t: this.toBoolean('input-read-only'),\r\n      closeByOutsideClick: this.toBoolean('close-by-outside-click'),\r\n      toolbar: this.toBoolean('toolbar'),\r\n      toolbarCloseText: this.props['toolbar-close-text'],\r\n      routableModals: this.toBoolean('routable-modals'),\r\n      url: this.props.url,\r\n    };\r\n  },\r\n\r\n  getCols: function() {\r\n    return Array.isArray(this.props.cols) ? this.props.cols.map((col, i) => {\r\n      if (Array.isArray(col.source)) {\r\n        col.values = col.source.slice(0);\r\n        \r\n        if (col.valueProperty) {\r\n          col.values = col.source.map(item => item[col.valueProperty]);\r\n        }\r\n\r\n        if (col.displayProperty) {\r\n          col.displayValues = col.source.map(item => item[col.displayProperty]);\r\n        }\r\n      }\r\n      \r\n      if (!Array.isArray(col.values)) {\r\n        col.values = [];\r\n        console.warn(`Picker ${this.name}: Column ${i+1} has no values`);\r\n      }\r\n\r\n      return dmx.clone(col);\r\n    }) : [];\r\n  },\r\n\r\n  registerEvents: function(events) {\r\n    for (const event of events) {\r\n      this.component.on(event, () => this.dispatchEvent(event));\r\n    }\r\n  },\r\n\r\n  toBoolean: function(name, props) {\r\n    const value = props ? props[name] : this.props[name];\r\n    \r\n    if (typeof value == 'string') {\r\n      return value != 'false';\r\n    }\r\n    \r\n    return !!value;\r\n  },\r\n});"]}