{"version":3,"sources":["components/calendar.js","components/calendarSourceBase.js","components/calendarSource.js","components/calendarSourceGoogle.js","components/calendarEvent.js"],"names":["dmx","Component","initialData","title","activeStart","activeEnd","currentStart","currentEnd","constructor","node","parent","this","onDatesRender","bind","onDateClick","onEventClick","onEventMouseEnter","onEventMouseLeave","onEventDrop","onEventResize","onEventRender","onEventDestroy","onSelect","parseSource","_businessHours","BaseComponent","call","attributes","timezone","type","String","default","date","locale","height","Number","view","views","Array","theme","Boolean","selectable","editable","Object","methods","gotoDate","calendar","updateSize","prev","next","prevYear","nextYear","today","events","dateclick","MouseEvent","eventclick","eventmouseenter","eventmouseleave","eventdrop","Event","eventresize","select","info","set","parseDate","dispatchEvent","jsEvent","dateStr","allDay","preventDefault","event","getEventProps","scope","DataScope","source","internalEventSource","extendedProps","bs4Tooltip","$","el","tooltip","placement","parse","bs4TooltipPlacement","bs4TooltipTitle","props","html","start","startStr","end","endStr","child","register","$parseAttributes","self","prototype","dom","getAttributes","forEach","attr","name","$addBinding","value","oldProps","clone","key","keys","modifiers","isArray","values","update","parseAttribute","toCamelCase","argument","constraint","binding","removeAttribute","fullName","render","plugins","filter","window","toUpperCase","slice","FullCalendar","Calendar","googleCalendarApiKey","timeZone","defaultDate","defaultView","aspectRatio","themeSystem","selectConstraint","showNonCurrentDates","eventOverlap","businessHours","fixedWeekCount","eventOrder","eventLimit","nowIndicator","datesRender","dateClick","eventClick","eventMouseEnter","eventMouseLeave","eventDrop","eventResize","eventRender","eventDestroy","header","left","center","right","toString","$parse","changeView","setOption","equal","beforeDestroy","destroy","id","toISOString","attrName","re","RegExp","replace","nodeType","i","length","attribute","specified","test","split","part","pos","indexOf","substr","push","getFullYear","getMonth","getDate","str","a","b","console","error","color","overlap","refetch","getEventSourceById","extends","parseEvents","success","failure","repeatItems","data","prop","hasOwnProperty","children","addEventSource","assign","onSuccess","onFailure","err","url","rendering"],"mappings":"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","file":"../dmxCalendar/dmxCalendar.js","sourcesContent":["dmx.Component('calendar', {\r\n\r\n    initialData: {\r\n        title: null,\r\n        activeStart: null,\r\n        activeEnd: null,\r\n        currentStart: null,\r\n        currentEnd: null\r\n    },\r\n\r\n    constructor: function(node, parent) {\r\n        this.onDatesRender = this.onDatesRender.bind(this);\r\n        this.onDateClick = this.onDateClick.bind(this);\r\n        this.onEventClick = this.onEventClick.bind(this);\r\n        this.onEventMouseEnter = this.onEventMouseEnter.bind(this);\r\n        this.onEventMouseLeave = this.onEventMouseLeave.bind(this);\r\n        this.onEventDrop = this.onEventDrop.bind(this);\r\n        this.onEventResize = this.onEventResize.bind(this);\r\n        this.onEventRender = this.onEventRender.bind(this);\r\n        this.onEventDestroy = this.onEventDestroy.bind(this);\r\n        this.onSelect = this.onSelect.bind(this);\r\n        this.parseSource = this.parseSource.bind(this);\r\n\r\n        this._businessHours = {};\r\n\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    attributes: {\r\n        'timezone': { // moment-timezone or luxon plugin for named timezones\r\n            type: String,\r\n            default: 'local' // \"local\", \"UTC\"\r\n        },\r\n\r\n        'date': {\r\n            type: String,\r\n            default: null // ISO8601 format\r\n        },\r\n\r\n        'locale': { // locales include needed\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'height': { // height of entire calendar\r\n            type: String,\r\n            default: null // interger, \"parent\", \"auto\"\r\n        },\r\n\r\n        'aspect-ratio': { // width-to-height aspect ratio\r\n            type: Number,\r\n            default: 1.35\r\n        },\r\n\r\n        'view': { // dayGrid, timeGrid, list plugin\r\n            type: String,\r\n            default: null // name of view like \"dayGridMonth\"\r\n        },\r\n\r\n        'views': {\r\n            type: Array,\r\n            default: []\r\n        },\r\n\r\n        'theme': { // bootstrap plugin\r\n            type: String,\r\n            default: 'standard' // \"standard\", \"bootstrap\"\r\n        },\r\n\r\n        'hide-non-current-dates': { // dayGrid plugin (dayGridMonth only)\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'selectable': { // interaction plugin\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        /* will use custom parser for this\r\n        'constraint': { // interaction plugin\r\n            type: [String, Object], // https://fullcalendar.io/docs/selectConstraint\r\n            default: null\r\n        },\r\n        */\r\n\r\n        'editable': { // interaction plugin\r\n            type: Boolean,\r\n            default: null\r\n        },\r\n\r\n        'no-event-overlap': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'business-hours': {\r\n            type: Boolean, // https://fullcalendar.io/docs/businessHours\r\n            default: false\r\n        },\r\n\r\n        'google-calendar-api-key': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'no-fixed-week-count': {\r\n            type: Boolean, // https://fullcalendar.io/docs/fixedWeekCount\r\n            default: false\r\n        },\r\n\r\n        'event-order': {\r\n            type: String, // https://fullcalendar.io/docs/eventOrder\r\n            default: 'start,-duration,allDay,title'\r\n        },\r\n\r\n        'event-limit': {\r\n            type: [Boolean, Number], // https://fullcalendar.io/docs/eventLimit\r\n            default: false\r\n        },\r\n\r\n        'now-indicator': {\r\n            type: Boolean, // https://fullcalendar.io/docs/nowIndicator\r\n            default: false\r\n        },\r\n\r\n        'bs4-tooltip': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'bs4-tooltip-placement': {\r\n            type: String, // expression\r\n            default: '\"top\"'\r\n        },\r\n\r\n        'bs4-tooltip-title': {\r\n            type: String, // expression\r\n            default: 'event.extendedProps.description || event.title'\r\n        },\r\n\r\n        'bs4-tooltip-html': {\r\n            type: String, // expression\r\n            default: 'false'\r\n        },\r\n\r\n        'views-options': {\r\n            type: Object, // https://fullcalendar.io/docs/view-specific-options\r\n            default: {}\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        gotoDate: function(date) {\r\n            this.calendar.gotoDate(date);\r\n        },\r\n\r\n        updateSize: function() {\r\n            this.calendar.updateSize();\r\n        },\r\n\r\n        prev: function() {\r\n            this.calendar.prev();\r\n        },\r\n\r\n        next: function() {\r\n            this.calendar.next();\r\n        },\r\n\r\n        prevYear: function() {\r\n            this.calendar.prevYear();\r\n        },\r\n\r\n        nextYear: function() {\r\n            this.calendar.nextYear();\r\n        },\r\n\r\n        today: function() {\r\n            this.calendar.today();\r\n        }\r\n    },\r\n\r\n    events: {\r\n        dateclick: MouseEvent, // interaction plugin\r\n        eventclick: MouseEvent,\r\n        eventmouseenter: MouseEvent,\r\n        eventmouseleave: MouseEvent,\r\n        eventdrop: Event,\r\n        eventresize: Event,\r\n        select: Event\r\n    },\r\n\r\n    onDatesRender: function(info) {\r\n        this.set({\r\n            title: info.view.title,\r\n            activeStart: this.parseDate(info.view.activeStart),\r\n            activeEnd: this.parseDate(info.view.activeEnd),\r\n            currentStart: this.parseDate(info.view.currentStart),\r\n            currentEnd: this.parseDate(info.view.currentEnd)\r\n        });\r\n    },\r\n\r\n    onDateClick: function(info) {\r\n        var cancelled  = !this.dispatchEvent('dateclick', info.jsEvent, {\r\n            date: info.dateStr,\r\n            allDay: info.allDay\r\n        });\r\n\r\n        if (cancelled) {\r\n            info.jsEvent.preventDefault();\r\n        }\r\n    },\r\n\r\n    onEventClick: function(info) {\r\n        var cancelled  = !this.dispatchEvent('eventclick', info.jsEvent, {\r\n            event: this.getEventProps(info.event)\r\n        });\r\n\r\n        if (cancelled) {\r\n            info.jsEvent.preventDefault();\r\n        }\r\n    },\r\n\r\n    onEventMouseEnter: function(info) {\r\n        this.dispatchEvent('eventmouseenter', info.jsEvent, {\r\n            event: this.getEventProps(info.event)\r\n        });\r\n    },\r\n\r\n    onEventMouseLeave: function(info) {\r\n        this.dispatchEvent('eventmouseleave', info.jsEvent, {\r\n            event: this.getEventProps(info.event)\r\n        });\r\n    },\r\n\r\n    onEventDrop: function(info) {\r\n        this.dispatchEvent('eventdrop', info.jsEvent, {\r\n            event: this.getEventProps(info.event)\r\n        });\r\n    },\r\n\r\n    onEventResize: function(info) {\r\n        this.dispatchEvent('eventresize', info.jsEvent, {\r\n            event: this.getEventProps(info.event)\r\n        });\r\n    },\r\n\r\n    onEventRender: function(info) {\r\n        var scope = new dmx.DataScope({\r\n            event: this.getEventProps(info.event)\r\n        }, this);\r\n\r\n        if (info.event.source && info.event.source.internalEventSource.extendedProps && info.event.source.internalEventSource.extendedProps.bs4Tooltip) {\r\n            $(info.el).tooltip({\r\n                placement: dmx.parse(info.event.source.internalEventSource.extendedProps.bs4TooltipPlacement, scope) || 'top',\r\n                title: dmx.parse(info.event.source.internalEventSource.extendedProps.bs4TooltipTitle, scope) || ''\r\n            });\r\n        } else if (this.props['bs4-tooltip']) {\r\n            $(info.el).tooltip({\r\n                placement: dmx.parse(this.props['bs4-tooltip-placement'], scope) || 'top',\r\n                title: dmx.parse(this.props['bs4-tooltip-title'], scope) || '',\r\n                html: Boolean(dmx.parse(this.props['bs4-tooltip-html'], scope))\r\n            });\r\n        }\r\n    },\r\n\r\n    onEventDestroy: function(info) {\r\n        if (this.props['bs4-tooltip']) {\r\n            $(info.el).tooltip('dispose');\r\n        }\r\n    },\r\n\r\n    onSelect: function(info) {\r\n        this.dispatchEvent('select', info.jsEvent, {\r\n            start: info.startStr,\r\n            end: info.endStr,\r\n            allDay: info.allDay\r\n        });\r\n    },\r\n\r\n    parseSource: function(child) {\r\n        if (child instanceof dmx.Component('calendar-source-base')) {\r\n            child.calendar = this.calendar;\r\n            child.register();\r\n        }\r\n    },\r\n\r\n    $parseAttributes: function(node) {\r\n        var self = this;\r\n\r\n        dmx.BaseComponent.prototype.$parseAttributes.call(this, node);\r\n\r\n        // parse dmx-business-hours\r\n        dmx.dom.getAttributes(node).forEach(function(attr) {\r\n            if (attr.name == 'business-hours') {\r\n                self.$addBinding(attr.value, function(value) {\r\n                    if (value != null) {\r\n                        var oldProps = dmx.clone(self.props);\r\n                        var key = Object.keys(attr.modifiers)[0];\r\n\r\n                        self._businessHours[key] = value;\r\n\r\n                        if (!Array.isArray(this.props['business-hours'])) {\r\n                            self.props['business-hours'] = [];\r\n                        }\r\n\r\n                        self.props['business-hours'] = Object.values(self._businessHours);\r\n\r\n                        self.update(oldProps);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        // views options custom parse\r\n        this.parseAttribute(node, 'views-options').forEach(function(attr) {\r\n            self.$addBinding(attr.value, function(value) {\r\n                var oldProps = dmx.clone(self.props);\r\n                self.props['views-options'][this.toCamelCase(attr.argument)] = value || {};\r\n                self.update(oldProps);\r\n            });\r\n        });\r\n\r\n        // constraint custom parse\r\n        this.parseAttribute(node, 'constraint').forEach(function(attr) {\r\n            if (attr.modifiers['business-hours']) {\r\n                // special case for businessHours modifier\r\n                self.props.constraint = 'businessHours';\r\n            } else {\r\n                if (attr.binding) {\r\n                    // dynamic attribute\r\n                    self.$addBinding(attr.value, function(value) {\r\n                        var oldProps = dmx.clone(self.props);\r\n                        self.props.constraint = value;\r\n                        self.update(oldProps);\r\n                    });\r\n                } else {\r\n                    // static attribute\r\n                    self.props.constraint = attr.value;\r\n                }\r\n            }\r\n\r\n            // we need to remove the attribute so that the default parser doesn't parse it\r\n            node.removeAttribute(attr.fullName);\r\n        });\r\n    },\r\n\r\n    render: function(node) {\r\n        // detect installed plugins\r\n        var plugins = ['interaction', 'dayGrid', 'timeGrid', 'list', 'bootstrap', 'googleCalendar'].filter(function(name) {\r\n            return !!window['FullCalendar' + name[0].toUpperCase() + name.slice(1)];\r\n        });\r\n\r\n        this.calendar = new FullCalendar.Calendar(node, {\r\n            plugins: plugins,\r\n            googleCalendarApiKey: this.props['google-calendar-api-key'],\r\n            timeZone: this.props.timezone,\r\n            defaultDate: this.props.date,\r\n            defaultView: this.props.view,\r\n            locale: this.props.locale,\r\n            height: this.props.height,\r\n            aspectRatio: this.props['aspect-ratio'],\r\n            themeSystem: this.props.theme,\r\n            selectable: this.props.selectable,\r\n            selectConstraint: this.props.constraint,\r\n            editable: this.props.editable,\r\n            showNonCurrentDates: !this.props['hide-non-current-dates'],\r\n            eventOverlap: !this.props['no-event-overlap'],\r\n            businessHours: this.props['business-hours'],\r\n            fixedWeekCount: !this.props['no-fixed-week-count'],\r\n            eventOrder: this.props['event-order'],\r\n            eventLimit: this.props['event-limit'],\r\n            nowIndicator: this.props['now-indicator'],\r\n            datesRender: this.onDatesRender,\r\n            dateClick: this.onDateClick,\r\n            eventClick: this.onEventClick,\r\n            eventMouseEnter: this.onEventMouseEnter,\r\n            eventMouseLeave: this.onEventMouseLeave,\r\n            eventDrop: this.onEventDrop,\r\n            eventResize: this.onEventResize,\r\n            eventRender: this.onEventRender,\r\n            eventDestroy: this.onEventDestroy,\r\n            select: this.onSelect,\r\n            views: this.props['views-options'],\r\n            header: {\r\n                left: 'today prev,next',\r\n                center: 'title',\r\n                right: this.props.views.toString()\r\n            }\r\n        });\r\n\r\n        this.$parse();\r\n\r\n        this.calendar.render();\r\n    },\r\n\r\n    update: function(props) {\r\n        if (!this.calendar) return;\r\n        \r\n        if (props.view != this.props.view) {\r\n            this.calendar.changeView(this.props.view || 'dayGridMonth');\r\n        }\r\n\r\n        if (props.date != this.props.date) {\r\n            this.calendar.gotoDate(this.props.date);\r\n        }\r\n\r\n        if (props.timezone != this.props.timezone) {\r\n            this.calendar.setOption('timeZone', this.props.timezone);\r\n        }\r\n\r\n        if (props.locale != this.props.locale) {\r\n            this.calendar.setOption('locale', this.props.locale);\r\n        }\r\n\r\n        if (props.theme != this.props.theme) {\r\n            this.calendar.setOption('themeSystem', this.props.theme);\r\n        }\r\n\r\n        if (props['hide-non-current-dates'] != this.props['hide-non-current-dates']) {\r\n            this.calendar.setOption('showNonCurrentDates', !this.props['hide-non-current-dates']);\r\n        }\r\n\r\n        if (props.selectable != this.props.selectable) {\r\n            this.calendar.setOption('selectable', this.props.selectable);\r\n        }\r\n\r\n        if (props.editable != this.props.editable) {\r\n            this.calendar.setOption('editable', this.props.editable);\r\n        }\r\n\r\n        if (props['no-event-overlap'] != this.props['no-event-overlap']) {\r\n            this.calendar.setOption('eventOverlap', !this.props['no-event-overlap']);\r\n        }\r\n\r\n        if (!dmx.equal(props['business-hours'], this.props['business-hours'])) {\r\n            this.calendar.setOption('businessHours', this.props['business-hours']);\r\n        }\r\n\r\n        if (!dmx.equal(props.constraint, this.props.constraint)) {\r\n            this.calendar.setOption('selectConstraint', this.props.constraint);\r\n        }\r\n\r\n        if (props['google-calendar-api-key'] != this.props['google-calendar-api-key']) {\r\n            this.calendar.setOption('googleCalendarApiKey', this.props['google-calendar-api-key']);\r\n        }\r\n\r\n        if (props['no-fixed-week-count'] != this.props['no-fixed-week-count']) {\r\n            this.calendar.setOption('fixedWeekCount', !this.props['no-fixed-week-count']);\r\n        }\r\n\r\n        if (props['event-order'] != this.props['event-order']) {\r\n            this.calendar.setOption('eventOrder', this.props['event-order']);\r\n        }\r\n\r\n        if (props['event-limit'] != this.props['event-limit']) {\r\n            this.calendar.setOption('eventLimit', this.props['event-limit']);\r\n        }\r\n\r\n        if (props['now-indicator'] != this.props['now-indicator']) {\r\n            this.calendar.setOption('nowIndicator', this.props['now-indicator']);\r\n        }\r\n\r\n        if (!dmx.equal(props['views-options'], this.props['views-options'])) {\r\n            this.calendar.setOption('views', this.props['views-options']);\r\n        }\r\n    },\r\n\r\n    beforeDestroy: function() {\r\n        this.calendar.destroy();\r\n    },\r\n\r\n    getEventProps: function(event) {\r\n        return {\r\n            id: event.id,\r\n            start: event.start && event.start.toISOString(),\r\n            end: event.end && event.end.toISOString(),\r\n            allDay: event.allDay,\r\n            title: event.title,\r\n            extendedProps: event.extendedProps\r\n        };\r\n    },\r\n\r\n    // special parse required for constraint attribute\r\n    // supports static/dynamic attributes\r\n    parseAttribute: function(node, attrName) {\r\n        var attributes = [];\r\n        var re = new RegExp('^(dmx\\\\-bind:)?' + attrName.replace(/[-[\\]{}()*+?.,\\^$|#\\s]/g, '\\\\$&'), 'i');\r\n\r\n        if (node.nodeType == 1) {\r\n            for (var i = 0; i < node.attributes.length; i++) {\r\n                var attribute = node.attributes[i];\r\n\r\n                if (attribute && attribute.specified && re.test(attribute.name)) {\r\n                    var name = attribute.name;\r\n                    var argument = null;\r\n                    var modifiers = {};\r\n\r\n                    name = name.replace(/^dmx\\-bind:/i, '');\r\n\r\n                    name.split('.').forEach(function(part, i) {\r\n                        if (i === 0) {\r\n                            name = part;\r\n                        } else {\r\n                            var pos = part.indexOf(':');\r\n                            if (pos > 0) {\r\n                                modifiers[part.substr(0, pos)] = part.substr(pos + 1);\r\n                            } else {\r\n                                modifiers[part] = true;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    var pos = name.indexOf(':');\r\n                    if (pos > 0) {\r\n                        argument = name.substr(pos + 1);\r\n                        name = name.substr(0, pos);\r\n                    }\r\n\r\n                    attributes.push({\r\n                        name: name,\r\n                        binding: attribute.name.indexOf('dmx-bind:') === 0,\r\n                        fullName: attribute.name,\r\n                        value: attribute.value,\r\n                        argument: argument,\r\n                        modifiers: modifiers\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    },\r\n\r\n    parseDate: function(date) {\r\n        return date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + (date.getDate())).slice(-2) + ' 00:00:00'\r\n    },\r\n\r\n    toCamelCase: function(str) {\r\n        return str.replace(/-(\\w)/g, function(a, b) {\r\n            return b.toUpperCase();\r\n        });\r\n    }\r\n\r\n});","dmx.Component('calendar-source-base', {\r\n\r\n    constructor: function(node, parent, source) {\r\n        if (parent instanceof dmx.Component('calendar')) {\r\n            this.calendar = parent.calendar;\r\n        } else {\r\n            console.error('calendar-source can only be child of calendar component.');\r\n        }\r\n\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    initialData: {\r\n        id: null,\r\n        events: []\r\n    },\r\n\r\n    attributes: {\r\n        'color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'background-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'border-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'text-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'class-name': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'editable': {\r\n            type: Boolean,\r\n            default: null\r\n        },\r\n\r\n        'overlap': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'bs4-tooltip': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'bs4-tooltip-placement': {\r\n            type: String, // expression\r\n            default: '\"top\"'\r\n        },\r\n\r\n        'bs4-tooltip-title': {\r\n            type: String, // expression\r\n            default: 'event.extendedProps.description || event.title'\r\n        },\r\n\r\n        'bs4-tooltip-html': {\r\n            type: String, // expression\r\n            default: 'false'\r\n        }\r\n    },\r\n    \r\n    methods: {\r\n        refetch: function() {\r\n            this.refetch();\r\n        }\r\n    },\r\n\r\n    render: function() {\r\n        if (!this.calendar) return;\r\n        this.$parse();\r\n        this.set('id', this.name);\r\n    },\r\n\r\n    refetch: function() {\r\n        this.calendar.getEventSourceById(this.name).refetch();\r\n    },\r\n\r\n    toCamelCase: function(str) {\r\n        return str.replace(/-(\\w)/g, function(a, b) {\r\n            return b.toUpperCase();\r\n        });\r\n    }\r\n\r\n});","dmx.Component('calendar-source', {\r\n\r\n    extends: 'calendar-source-base',\r\n\r\n    constructor: function(node, parent, source) {\r\n        this.parseEvents = this.parseEvents.bind(this);\r\n\r\n        dmx.Component('calendar-source-base').call(this, node, parent);\r\n    },\r\n\r\n    attributes: {\r\n        'events': {\r\n            type: Array,\r\n            default: []\r\n        },\r\n\r\n        'event-id': {\r\n            type: String,\r\n            default: 'id'\r\n        },\r\n\r\n        'event-title': {\r\n            type: String,\r\n            default: 'title'\r\n        },\r\n\r\n        'event-url': {\r\n            type: String,\r\n            default: 'url'\r\n        },\r\n\r\n        'event-start': {\r\n            type: String,\r\n            default: 'start'\r\n        },\r\n\r\n        'event-end': {\r\n            type: String,\r\n            default: 'end'\r\n        },\r\n\r\n        'event-all-day': {\r\n            type: String,\r\n            default: 'allDay'\r\n        },\r\n\r\n        'event-days-of-week': {\r\n            type: String,\r\n            default: 'daysOfWeek'\r\n        },\r\n\r\n        'event-start-time': {\r\n            type: String,\r\n            default: 'startTime'\r\n        },\r\n\r\n        'event-end-time': {\r\n            type: String,\r\n            default: 'endTime'\r\n        },\r\n\r\n        'event-start-recur': {\r\n            type: String,\r\n            default: 'startRecur'\r\n        },\r\n\r\n        'event-end-recur': {\r\n            type: String,\r\n            default: 'endRecur'\r\n        },\r\n\r\n        'event-group-id': {\r\n            type: String,\r\n            default: 'groupId'\r\n        },\r\n\r\n        'event-rendering': {\r\n            type: String,\r\n            default: 'rendering'\r\n        },\r\n\r\n        'event-color': {\r\n            type: String,\r\n            default: 'color'\r\n        },\r\n\r\n        'event-background-color': {\r\n            type: String,\r\n            default: 'backgroundColor'\r\n        },\r\n\r\n        'event-border-color': {\r\n            type: String,\r\n            default: 'borderColor'\r\n        },\r\n\r\n        'event-text-color': {\r\n            type: String,\r\n            default: 'textColor'\r\n        },\r\n\r\n        'event-class-name': {\r\n            type: String,\r\n            default: 'className'\r\n        },\r\n\r\n        'event-editable': {\r\n            type: String,\r\n            default: 'editable'\r\n        },\r\n\r\n        'event-overlap': {\r\n            type: String,\r\n            default: 'overlap'\r\n        },\r\n\r\n        'event-extended-props': {\r\n            type: String,\r\n            default: '$value'\r\n        }\r\n    },\r\n\r\n    parseEvents: function(info, success, failure) {\r\n        this.events = [];\r\n\r\n        if (Array.isArray(this.props.events)) {\r\n            dmx.repeatItems(this.props.events).forEach(function(data) {\r\n                var scope = new dmx.DataScope(data, this);\r\n                var event = {};\r\n\r\n                for (var prop in this.props) {\r\n                    if (!this.props.hasOwnProperty(prop)) continue;\r\n                    if (prop.indexOf('event-') === 0) {\r\n                        var value = dmx.parse(this.props[prop], scope);\r\n\r\n                        if (value != null) {\r\n                            event[this.toCamelCase(prop.substr(6))] = value;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.events.push(event);\r\n            }, this);\r\n        }\r\n\r\n        this.children.forEach(function(child) {\r\n            if (child instanceof dmx.Component('calendar-event')) {\r\n                var event = { id: child.name };\r\n\r\n                for (var prop in child.props) {\r\n                    if (!child.props.hasOwnProperty(prop)) continue;\r\n                    if (child.props[prop] != null) {\r\n                        event[this.toCamelCase(prop)] = child.props[prop];\r\n                    }\r\n                }\r\n\r\n                this.events.push(event);\r\n            }\r\n        }, this);\r\n\r\n        success(this.events);\r\n        \r\n        this.set('events', this.events);\r\n    },\r\n\r\n    render: function() {\r\n        if (!this.calendar) return;\r\n\r\n        this.$parse();\r\n\r\n        var props = {};\r\n\r\n        for (var prop in this.props) {\r\n            if (!this.props.hasOwnProperty(prop)) continue;\r\n            if (this.props[prop] != null) {\r\n                props[this.toCamelCase(prop)] = this.props[prop];\r\n            }\r\n        }\r\n        \r\n        this.calendar.addEventSource(Object.assign({\r\n            id: this.name\r\n        }, props, {\r\n            events: this.parseEvents\r\n        }));\r\n\r\n        this.set('id', this.name);\r\n    },\r\n\r\n    update: function(props) {\r\n        if (!dmx.equal(props.events, this.props.events)) {\r\n            this.refetch();\r\n        }\r\n    }\r\n\r\n});","dmx.Component('calendar-source-google', {\r\n\r\n    extends: 'calendar-source-base',\r\n\r\n    constructor: function(node, parent, source) {\r\n        this.onSuccess = this.onSuccess.bind(this);\r\n        this.onFailure = this.onFailure.bind(this);\r\n\r\n        dmx.Component('calendar-source-base').call(this, node, parent);\r\n    },\r\n\r\n    attributes: {\r\n        'google-calendar-api-key': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'google-calendar-id': {\r\n            type: String,\r\n            default: null\r\n        },\r\n    },\r\n\r\n    events: {\r\n        success: Event,\r\n        failure: Event\r\n    },\r\n\r\n    onSuccess: function() {\r\n        this.dispatchEvent('success');\r\n    },\r\n\r\n    onFailure: function(err) {\r\n        this.dispatchEvent('failure');\r\n    },\r\n\r\n    render: function() {\r\n        if (!this.calendar) return;\r\n\r\n        this.$parse();\r\n\r\n        var props = {};\r\n\r\n        for (var prop in this.props) {\r\n            if (!this.props.hasOwnProperty(prop)) continue;\r\n            if (this.props[prop] != null) {\r\n                props[this.toCamelCase(prop)] = this.props[prop];\r\n            }\r\n        }\r\n        \r\n        this.calendar.addEventSource(Object.assign({\r\n            id: this.name,\r\n            success: this.onSuccess,\r\n            failure: this.onFailure\r\n        }, props));\r\n\r\n        this.set('id', this.name);\r\n    }\r\n\r\n});","dmx.Component('calendar-event', {\r\n\r\n    constructor: function(node, parent, source) {\r\n        if (!(parent instanceof dmx.Component('calendar-source'))) {\r\n            console.error('calendar-event can only be child of calendar-source component.');\r\n        }\r\n\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    attributes: {\r\n        'title': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'url': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'start': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'end': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'all-day': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'days-of-week': { // For defining a simple recurring event\r\n            type: Array,\r\n            default: null\r\n        },\r\n\r\n        'start-time': { // For defining a simple recurring event\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'end-time': { // For defining a simple recurring event\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'start-recur': { // For defining a simple recurring event\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'end-recur': { // For defining a simple recurring event\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'group-id': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'rendering': {\r\n            type: String, // background, inverse-background\r\n            default: null\r\n        },\r\n\r\n        'editable': {\r\n            type: Boolean,\r\n            default: null\r\n        },\r\n\r\n        'color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'background-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'border-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'text-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'class-name': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'extended-props': {\r\n            type: Object,\r\n            default: null\r\n        }\r\n    },\r\n\r\n    $parseAttributes: function(node) {\r\n        var self = this;\r\n\r\n        dmx.BaseComponent.prototype.$parseAttributes.call(this, node);\r\n\r\n        // constraint custom parse\r\n        this.parseAttribute(node, 'constraint').forEach(function(attr) {\r\n            if (attr.modifiers['business-hours']) {\r\n                // special case for businessHours modifier\r\n                self.props.constraint = 'businessHours';\r\n            } else {\r\n                if (attr.binding) {\r\n                    // dynamic attribute\r\n                    self.$addBinding(attr.value, function(value) {\r\n                        self.props.constraint = value;\r\n                    });\r\n                } else {\r\n                    // static attribute\r\n                    self.props.constraint = attr.value;\r\n                }\r\n            }\r\n\r\n            // we need to remove the attribute so that the default parser doesn't parse it\r\n            node.removeAttribute(attr.fullName);\r\n        });\r\n    },\r\n\r\n    update: function(props) {\r\n        if (!dmx.equal(props, this.props)) {\r\n            if (this.parent.refetch) {\r\n                this.parent.refetch();\r\n            }\r\n        }\r\n    },\r\n\r\n    // special parse required for constraint attribute\r\n    // supports static/dynamic attributes\r\n    parseAttribute: function(node, attrName) {\r\n        var attributes = [];\r\n        var re = new RegExp('^(dmx\\\\-bind:)?' + attrName.replace(/[-[\\]{}()*+?.,\\^$|#\\s]/g, '\\\\$&'), 'i');\r\n\r\n        if (node.nodeType == 1) {\r\n            for (var i = 0; i < node.attributes.length; i++) {\r\n                var attribute = node.attributes[i];\r\n\r\n                if (attribute && attribute.specified && re.test(attribute.name)) {\r\n                    var name = attribute.name;\r\n                    var argument = null;\r\n                    var modifiers = {};\r\n\r\n                    name = name.replace(/^dmx\\-bind:/i, '');\r\n\r\n                    name.split('.').forEach(function(part, i) {\r\n                        if (i === 0) {\r\n                            name = part;\r\n                        } else {\r\n                            var pos = part.indexOf(':');\r\n                            if (pos > 0) {\r\n                                modifiers[part.substr(0, pos)] = part.substr(pos + 1);\r\n                            } else {\r\n                                modifiers[part] = true;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    var pos = name.indexOf(':');\r\n                    if (pos > 0) {\r\n                        argument = name.substr(pos + 1);\r\n                        name = name.substr(0, pos);\r\n                    }\r\n\r\n                    attributes.push({\r\n                        name: name,\r\n                        binding: attribute.name.indexOf('dmx-bind:') === 0,\r\n                        fullName: attribute.name,\r\n                        value: attribute.value,\r\n                        argument: argument,\r\n                        modifiers: modifiers\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n});"]}