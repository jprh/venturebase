/*!
 App Connect Masonry
 Version: 2.0.0-beta.1
 (c) 2023 Wappler.io
 @build 2023-05-25 13:16:22
 */
dmx.Component("masonry",{extends:"repeat",attributes:{breakpoints:{type:Object,default:{sm:480,md:768,lg:992,xl:1200,xxl:1400}},columns:{type:Number,default:4},columnsSm:{type:Number,default:null},columnsMd:{type:Number,default:null},columnsLg:{type:Number,default:null},columnsXl:{type:Number,default:null},columnsXll:{type:Number,default:null},gutter:{type:Number,default:15},gutterSm:{type:Number,default:null},gutterMd:{type:Number,default:null},gutterLg:{type:Number,default:null},gutterXl:{type:Number,default:null},gutterXll:{type:Number,default:null},preserveOrder:{type:Boolean,default:!1},animated:{type:Boolean,default:!1},animationDuration:{type:Number,default:400}},methods:{reflow(){this._reflow()}},init(e){dmx.Component("repeat").prototype.init.call(this,e),this._reflow=dmx.debounce(this._reflow.bind(this)),this._resizeObserver=new ResizeObserver(this._reflow),this._resizeObserver.observe(e)},render(e){e.style.setProperty("position","relative")},performUpdate(e){(e.has("repeat")||e.has("key"))&&dmx.Component("repeat").prototype.performUpdate.call(this,e),this._reflow()},_reflow(){if(!this.children.length)return;this.$node.querySelectorAll("img").forEach((e=>{e.dmxMasonry||(e.addEventListener("load",this._reflow,{once:!0}),e.src&&(e.src=e.src),e.dmxMasonry=!0)}));let{breakpoints:e,columns:t,gutter:r}=this.props;Object.keys(e).forEach((s=>{if(window.innerWidth>=e[s]){const e=s[0].toUpperCase()+s.slice(1);t=this.props["columns"+e]||t,r=this.props["gutter"+e]||r}}));const s=Array.from(this.$node.children),o=window.getComputedStyle(this.$node),l=parseInt(o.paddingLeft)||0,n=parseInt(o.paddingRight)||0,i=Math.floor((this.$node.clientWidth-l-n-(t-1)*r)/t);for(const e of s)e.style.setProperty("box-sizing","border-box"),e.style.setProperty("width",i+"px");window.dispatchEvent(new Event("resize"));const a=Array(t).fill(0),p=s.map((e=>e.clientHeight));s.forEach(((e,s)=>{const o=this.props.preserveOrder?s%t:a.indexOf(Math.min.apply(Math,a)),l=o*i+o*r,n=a[o];e.style.setProperty("transform",`translate3d(${l}px, ${n}px, 0px)`),p[s]&&(e.dmxMasonryInit||(e.style.setProperty("position","absolute"),this.props.animated&&e.style.setProperty("transition",`transform ${this.props.animationDuration}ms`),requestAnimationFrame((()=>e.style.setProperty("visibility","visible"))),e.dmxMasonryInit=!0),a[o]+=p[s]+r)})),this.$node.style.setProperty("height",Math.max.apply(Math,a)-r+"px")}});
//# sourceMappingURL=../maps/dmxMasonry.js.map
